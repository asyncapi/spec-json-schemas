{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "AsyncAPI 3.0.0 schema.",
    "type": "object",
    "required": [
        "asyncapi",
        "info"
    ],
    "additionalProperties": false,
    "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
            "$ref": "#/definitions/specificationExtension"
        }
    },
    "properties": {
        "asyncapi": {
            "type": "string",
            "const": "3.0.0",
            "description": "The AsyncAPI specification version of this document."
        },
        "id": {
            "type": "string",
            "description": "A unique id representing the application.",
            "format": "uri"
        },
        "info": {
            "$ref": "#/definitions/info"
        },
        "servers": {
            "$ref": "#/definitions/servers"
        },
        "defaultContentType": {
            "type": "string"
        },
        "channels": {
            "$ref": "#/definitions/channels"
        },
        "operations": {
            "$ref": "#/definitions/operations"
        },
        "components": {
            "$ref": "#/definitions/components"
        }
    },
    "definitions": {
        "specificationExtension": {
            "description": "Any property starting with x- is valid.",
            "additionalProperties": true,
            "additionalItems": true
        },
        "info": {
            "type": "object",
            "description": "General information about the API.",
            "required": [
                "version",
                "title"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "title": {
                    "type": "string",
                    "description": "A unique and precise title of the API."
                },
                "version": {
                    "type": "string",
                    "description": "A semantic version number of the API."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the API. Should be different from the title. CommonMark is allowed."
                },
                "termsOfService": {
                    "type": "string",
                    "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
                    "format": "uri"
                },
                "contact": {
                    "$ref": "#/definitions/contact"
                },
                "license": {
                    "$ref": "#/definitions/license"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                }
            }
        },
        "contact": {
            "type": "object",
            "description": "Contact information for the owners of the API.",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The identifying name of the contact person/organization."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the contact information.",
                    "format": "uri"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the contact person/organization.",
                    "format": "email"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "license": {
            "type": "object",
            "required": [
                "name"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the license type. It's encouraged to use an OSI compatible license."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the license.",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "Reference": {
            "type": "object",
            "required": [
                "$ref"
            ],
            "properties": {
                "$ref": {
                    "$ref": "#/definitions/ReferenceObject"
                }
            }
        },
        "ReferenceObject": {
            "type": "string",
            "format": "uri-reference"
        },
        "tag": {
            "type": "object",
            "additionalProperties": false,
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "externalDocs": {
            "type": "object",
            "additionalProperties": false,
            "description": "information about external documentation",
            "required": [
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "servers": {
            "description": "An object representing multiple servers.",
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/server"
                    }
                ]
            }
        },
        "server": {
            "type": "object",
            "description": "An object representing a Server.",
            "required": [
                "host",
                "protocol"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The server host name."
                },
                "pathname": {
                    "type": "string",
                    "description": "The path to a resource in the host."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the server."
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the server."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the server. CommonMark is allowed."
                },
                "protocol": {
                    "type": "string",
                    "description": "The transfer protocol."
                },
                "protocolVersion": {
                    "type": "string"
                },
                "variables": {
                    "$ref": "#/definitions/serverVariables"
                },
                "security": {
                    "$ref": "#/definitions/securityRequirements"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/serverBindingsObject"
                        }
                    ]
                }
            }
        },
        "serverVariables": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/serverVariable"
                    }
                ]
            }
        },
        "serverVariable": {
            "type": "object",
            "description": "An object representing a Server Variable for server URL template substitution.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "enum": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "securityRequirements": {
            "description": "An array representing security requirements.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/SecurityScheme"
                    }
                ]
            }
        },
        "SecurityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/userPassword"
                },
                {
                    "$ref": "#/definitions/apiKey"
                },
                {
                    "$ref": "#/definitions/X509"
                },
                {
                    "$ref": "#/definitions/symmetricEncryption"
                },
                {
                    "$ref": "#/definitions/asymmetricEncryption"
                },
                {
                    "$ref": "#/definitions/HTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/oauth2Flows"
                },
                {
                    "$ref": "#/definitions/openIdConnect"
                },
                {
                    "$ref": "#/definitions/SaslSecurityScheme"
                }
            ]
        },
        "userPassword": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "userPassword"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "apiKey": {
            "type": "object",
            "required": [
                "type",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "apiKey"
                    ]
                },
                "in": {
                    "type": "string",
                    "enum": [
                        "user",
                        "password"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "X509": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "X509"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "symmetricEncryption": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "symmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "asymmetricEncryption": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "asymmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "HTTPSecurityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/NonBearerHTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/BearerHTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/APIKeyHTTPSecurityScheme"
                }
            ]
        },
        "NonBearerHTTPSecurityScheme": {
            "not": {
                "type": "object",
                "properties": {
                    "scheme": {
                        "type": "string",
                        "enum": [
                            "bearer"
                        ]
                    }
                }
            },
            "type": "object",
            "required": [
                "scheme",
                "type"
            ],
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http"
                    ]
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "BearerHTTPSecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "scheme"
            ],
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "bearer"
                    ]
                },
                "bearerFormat": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "APIKeyHTTPSecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "name",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "httpApiKey"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "in": {
                    "type": "string",
                    "enum": [
                        "header",
                        "query",
                        "cookie"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "oauth2Flows": {
            "type": "object",
            "required": [
                "type",
                "flows"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "oauth2"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "flows": {
                    "type": "object",
                    "properties": {
                        "implicit": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "tokenUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "password": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "clientCredentials": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "authorizationCode": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "scopes": {
                    "type": "array",
                    "description": "List of the needed scope names.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "oauth2Flow": {
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "availableScopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "oauth2Scopes": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "openIdConnect": {
            "type": "object",
            "required": [
                "type",
                "openIdConnectUrl"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "openIdConnect"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "openIdConnectUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "type": "array",
                    "description": "List of the needed scope names.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "SaslSecurityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/SaslPlainSecurityScheme"
                },
                {
                    "$ref": "#/definitions/SaslScramSecurityScheme"
                },
                {
                    "$ref": "#/definitions/SaslGssapiSecurityScheme"
                }
            ]
        },
        "SaslPlainSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "plain"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "SaslScramSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "scramSha256",
                        "scramSha512"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "SaslGssapiSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "gssapi"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "serverBindingsObject": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {},
                "ws": {},
                "amqp": {},
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
                            }
                        }
                    ]
                },
                "mqtt5": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt5-0.2.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt5-0.2.0-server"
                            }
                        }
                    ]
                },
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-server"
                            }
                        }
                    ]
                },
                "anypointmq": {},
                "nats": {},
                "jms": {},
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
                            }
                        }
                    ]
                },
                "solace": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0",
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.2.0-server"
                            }
                        }
                    ]
                },
                "googlepubsub": {},
                "pulsar": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
                            }
                        }
                    ]
                }
            }
        },
        "bindings-mqtt-0.2.0-server": {
            "title": "MQTT server bindings object",
            "description": "This object contains information about the server representation in MQTT.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The client identifier."
                },
                "cleanSession": {
                    "type": "boolean",
                    "description": "Whether to create a persistent connection or not. When 'false', the connection will be persistent."
                },
                "lastWill": {
                    "type": "object",
                    "description": "Last Will and Testament configuration.",
                    "properties": {
                        "topic": {
                            "type": "string",
                            "description": "The topic where the Last Will and Testament message will be sent."
                        },
                        "qos": {
                            "type": "integer",
                            "enum": [
                                0,
                                1,
                                2
                            ],
                            "description": "Defines how hard the broker/client will try to ensure that the Last Will and Testament message is received. Its value MUST be either 0, 1 or 2."
                        },
                        "message": {
                            "type": "string",
                            "description": "Last Will message."
                        },
                        "retain": {
                            "type": "boolean",
                            "description": "Whether the broker should retain the Last Will and Testament message or not."
                        }
                    }
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Interval in seconds of the longest period of time the broker and the client can endure without sending a message."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "clientId": "guest",
                    "cleanSession": true,
                    "lastWill": {
                        "topic": "/last-wills",
                        "qos": 2,
                        "message": "Guest gone offline.",
                        "retain": false
                    },
                    "keepAlive": 60,
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-mqtt5-0.2.0-server": {
            "title": "Server Schema",
            "description": "This object contains information about the server representation in MQTT5.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "sessionExpiryInterval": {
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0
                        },
                        {
                            "$ref": "#/definitions/schema"
                        },
                        {
                            "$ref": "#/definitions/Reference"
                        }
                    ],
                    "description": "Session Expiry Interval in seconds or a Schema Object containing the definition of the interval."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "sessionExpiryInterval": 60,
                    "bindingVersion": "0.2.0"
                },
                {
                    "sessionExpiryInterval": {
                        "type": "integer",
                        "minimum": 100
                    },
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "schema": {
            "allOf": [
                {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                {
                    "patternProperties": {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            "$ref": "#/definitions/specificationExtension"
                        }
                    },
                    "properties": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/schema"
                                },
                                {
                                    "type": "boolean"
                                }
                            ],
                            "default": {}
                        },
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/schema"
                                },
                                {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "$ref": "#/definitions/schema"
                                    }
                                }
                            ],
                            "default": {}
                        },
                        "allOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "oneOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "anyOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "not": {
                            "$ref": "#/definitions/schema"
                        },
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema"
                            },
                            "default": {}
                        },
                        "patternProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema"
                            },
                            "default": {}
                        },
                        "propertyNames": {
                            "$ref": "#/definitions/schema"
                        },
                        "contains": {
                            "$ref": "#/definitions/schema"
                        },
                        "discriminator": {
                            "type": "string"
                        },
                        "externalDocs": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/externalDocs"
                                }
                            ]
                        },
                        "deprecated": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                }
            ]
        },
        "json-schema-draft-07-schema": {
            "title": "Core schema meta-schema",
            "definitions": {
                "schemaArray": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    }
                },
                "nonNegativeInteger": {
                    "type": "integer",
                    "minimum": 0
                },
                "nonNegativeIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": []
                }
            },
            "type": [
                "object",
                "boolean"
            ],
            "properties": {
                "$id": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$schema": {
                    "type": "string",
                    "format": "uri"
                },
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$comment": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": true,
                "readOnly": {
                    "type": "boolean",
                    "default": false
                },
                "writeOnly": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": true
                },
                "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                },
                "maximum": {
                    "type": "number"
                },
                "exclusiveMaximum": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "exclusiveMinimum": {
                    "type": "number"
                },
                "maxLength": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minLength": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "pattern": {
                    "type": "string",
                    "format": "regex"
                },
                "additionalItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "items": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema"
                        },
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                        }
                    ],
                    "default": true
                },
                "maxItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "uniqueItems": {
                    "type": "boolean",
                    "default": false
                },
                "contains": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "maxProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "required": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
                },
                "additionalProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "definitions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "default": {}
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "default": {}
                },
                "patternProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "propertyNames": {
                        "format": "regex"
                    },
                    "default": {}
                },
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/json-schema-draft-07-schema"
                            },
                            {
                                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
                            }
                        ]
                    }
                },
                "propertyNames": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "const": true,
                "enum": {
                    "type": "array",
                    "items": true,
                    "minItems": 1,
                    "uniqueItems": true
                },
                "type": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        }
                    ]
                },
                "format": {
                    "type": "string"
                },
                "contentMediaType": {
                    "type": "string"
                },
                "contentEncoding": {
                    "type": "string"
                },
                "if": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "then": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "else": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "allOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "anyOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "oneOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "not": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                }
            },
            "default": true
        },
        "bindings-kafka-0.4.0-server": {
            "title": "Server Schema",
            "description": "This object contains server connection information to a Kafka broker. This object contains additional information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "schemaRegistryUrl": {
                    "type": "string",
                    "description": "API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used)."
                },
                "schemaRegistryVendor": {
                    "type": "string",
                    "description": "The vendor of the Schema Registry and Kafka serdes library that should be used."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.4.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "examples": [
                {
                    "schemaRegistryUrl": "https://my-schema-registry.com",
                    "schemaRegistryVendor": "confluent",
                    "bindingVersion": "0.4.0"
                }
            ]
        },
        "bindings-kafka-0.3.0-server": {
            "title": "Server Schema",
            "description": "This object contains server connection information to a Kafka broker. This object contains additional information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "schemaRegistryUrl": {
                    "type": "string",
                    "description": "API URL for the Schema Registry used when producing Kafka messages (if a Schema Registry was used)."
                },
                "schemaRegistryVendor": {
                    "type": "string",
                    "description": "The vendor of the Schema Registry and Kafka serdes library that should be used."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "examples": [
                {
                    "schemaRegistryUrl": "https://my-schema-registry.com",
                    "schemaRegistryVendor": "confluent",
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-ibmmq-0.1.0-server": {
            "title": "IBM MQ server bindings object",
            "description": "This object contains server connection information about the IBM MQ server, referred to as an IBM MQ queue manager. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Defines a logical group of IBM MQ server objects. This is necessary to specify multi-endpoint configurations used in high availability deployments. If omitted, the server object is not part of a group."
                },
                "ccdtQueueManagerName": {
                    "type": "string",
                    "default": "*",
                    "description": "The name of the IBM MQ queue manager to bind to in the CCDT file."
                },
                "cipherSpec": {
                    "type": "string",
                    "description": "The recommended cipher specification used to establish a TLS connection between the client and the IBM MQ queue manager. More information on SSL/TLS cipher specifications supported by IBM MQ can be found on this page in the IBM MQ Knowledge Center."
                },
                "multiEndpointServer": {
                    "type": "boolean",
                    "default": false,
                    "description": "If 'multiEndpointServer' is 'true' then multiple connections can be workload balanced and applications should not make assumptions as to where messages are processed. Where message ordering, or affinity to specific message resources is necessary, a single endpoint ('multiEndpointServer' = 'false') may be required."
                },
                "heartBeatInterval": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 999999,
                    "default": 300,
                    "description": "The recommended value (in seconds) for the heartbeat sent to the queue manager during periods of inactivity. A value of zero means that no heart beats are sent. A value of 1 means that the client will use the value defined by the queue manager. More information on heart beat interval can be found on this page in the IBM MQ Knowledge Center."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "examples": [
                {
                    "groupId": "PRODCLSTR1",
                    "cipherSpec": "ANY_TLS12_OR_HIGHER",
                    "bindingVersion": "0.1.0"
                },
                {
                    "groupId": "PRODCLSTR1",
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-solace-0.3.0-server": {
            "title": "Solace server bindings object",
            "description": "This object contains server connection information about the Solace broker. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "msgVpn": {
                    "type": "string",
                    "description": "The name of the Virtual Private Network to connect to on the Solace broker."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "examples": [
                {
                    "msgVpn": "ProdVPN",
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-solace-0.2.0-server": {
            "title": "Solace server bindings object",
            "description": "This object contains server connection information about the Solace broker. This object contains additional connectivity information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "msvVpn": {
                    "type": "string",
                    "description": "The name of the Virtual Private Network to connect to on the Solace broker."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "examples": [
                {
                    "msgVpn": "ProdVPN",
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-pulsar-0.1.0-server": {
            "title": "Server Schema",
            "description": "This object contains server information of Pulsar broker, which covers cluster and tenant admin configuration. This object contains additional information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "tenant": {
                    "type": "string",
                    "description": "The pulsar tenant. If omitted, 'public' MUST be assumed."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "tenant": "contoso",
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "channels": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/channel"
                    }
                ]
            }
        },
        "channel": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "address": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "An optional string representation of this channel's address. The address is typically the \"topic name\", \"routing key\", \"event type\", or \"path\". When `null` or absent, it MUST be interpreted as unknown. This is useful when the address is generated dynamically at runtime or can't be known upfront. It MAY contain Channel Address Expressions."
                },
                "messages": {
                    "$ref": "#/definitions/channelMessages"
                },
                "parameters": {
                    "$ref": "#/definitions/parameters"
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the channel."
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the channel."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the channel. CommonMark is allowed."
                },
                "servers": {
                    "type": "array",
                    "description": "The references of the servers on which this channel is available. If absent or empty then this channel must be available on all servers.",
                    "items": {
                        "$ref": "#/definitions/Reference"
                    },
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/channelBindingsObject"
                        }
                    ]
                }
            }
        },
        "channelMessages": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/messageObject"
                    }
                ]
            },
            "description": "A map of the messages that will be sent to this channel by any application at any time. **Every message sent to this channel MUST be valid against one, and only one, of the message objects defined in this map.**"
        },
        "messageObject": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/anySchema"
                },
                "payload": {
                    "$ref": "#/definitions/anySchema"
                },
                "correlationId": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/correlationId"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the message."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the message."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the message. CommonMark is allowed."
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                            {
                                "required": [
                                    "payload"
                                ]
                            },
                            {
                                "required": [
                                    "headers"
                                ]
                            }
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Machine readable name of the message example."
                            },
                            "summary": {
                                "type": "string",
                                "description": "A brief summary of the message example."
                            },
                            "headers": {
                                "type": "object",
                                "description": "Example of the application headers. It can be of any type."
                            },
                            "payload": {
                                "description": "Example of the message payload. It can be of any type."
                            }
                        }
                    }
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/messageBindingsObject"
                        }
                    ]
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/messageTrait"
                            },
                            {
                                "type": "array",
                                "items": [
                                    {
                                        "oneOf": [
                                            {
                                                "$ref": "#/definitions/Reference"
                                            },
                                            {
                                                "$ref": "#/definitions/messageTrait"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "object",
                                        "additionalItems": true
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        "anySchema": {
            "if": {
                "required": [
                    "schema"
                ]
            },
            "then": {
                "$ref": "#/definitions/multiFormatSchema"
            },
            "else": {
                "$ref": "#/definitions/schema"
            },
            "description": "An object representing either a schema or a multiFormatSchema based on the existence of the 'schema' property. If the property 'schema' is present, use the multi-format schema. Use the default AsyncAPI Schema otherwise."
        },
        "multiFormatSchema": {
            "if": {
                "not": {
                    "type": "object"
                }
            },
            "then": {
                "$ref": "#/definitions/schema"
            },
            "else": {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                    "^x-[\\w\\d\\.\\x2d_]+$": {
                        "$ref": "#/definitions/specificationExtension"
                    }
                },
                "properties": {
                    "schemaFormat": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "description": "All the schema formats tooling MUST support",
                                "enum": [
                                    "application/schema+json;version=draft-07",
                                    "application/schema+yaml;version=draft-07",
                                    "application/vnd.aai.asyncapi;version=3.0.0",
                                    "application/vnd.aai.asyncapi+json;version=3.0.0",
                                    "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                                ]
                            },
                            {
                                "description": "All the schema formats tools are RECOMMENDED to support",
                                "enum": [
                                    "application/vnd.oai.openapi;version=3.0.0",
                                    "application/vnd.oai.openapi+json;version=3.0.0",
                                    "application/vnd.oai.openapi+yaml;version=3.0.0",
                                    "application/vnd.apache.avro;version=1.9.0",
                                    "application/vnd.apache.avro+json;version=1.9.0",
                                    "application/vnd.apache.avro+yaml;version=1.9.0",
                                    "application/raml+yaml;version=1.0"
                                ]
                            }
                        ]
                    },
                    "schema": {}
                },
                "allOf": [
                    {
                        "if": {
                            "not": {
                                "description": "If no schemaFormat has been defined, default to schema or reference",
                                "required": [
                                    "schemaFormat"
                                ]
                            }
                        },
                        "then": {
                            "properties": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/definitions/Reference"
                                        },
                                        {
                                            "$ref": "#/definitions/schema"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "description": "If schemaFormat has been defined check if it's one of the AsyncAPI Schema Object formats",
                            "required": [
                                "schemaFormat"
                            ],
                            "properties": {
                                "schemaFormat": {
                                    "enum": [
                                        "application/vnd.aai.asyncapi;version=2.0.0",
                                        "application/vnd.aai.asyncapi+json;version=2.0.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.0.0",
                                        "application/vnd.aai.asyncapi;version=2.1.0",
                                        "application/vnd.aai.asyncapi+json;version=2.1.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.1.0",
                                        "application/vnd.aai.asyncapi;version=2.2.0",
                                        "application/vnd.aai.asyncapi+json;version=2.2.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.2.0",
                                        "application/vnd.aai.asyncapi;version=2.3.0",
                                        "application/vnd.aai.asyncapi+json;version=2.3.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.3.0",
                                        "application/vnd.aai.asyncapi;version=2.4.0",
                                        "application/vnd.aai.asyncapi+json;version=2.4.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.4.0",
                                        "application/vnd.aai.asyncapi;version=2.5.0",
                                        "application/vnd.aai.asyncapi+json;version=2.5.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.5.0",
                                        "application/vnd.aai.asyncapi;version=2.6.0",
                                        "application/vnd.aai.asyncapi+json;version=2.6.0",
                                        "application/vnd.aai.asyncapi+yaml;version=2.6.0",
                                        "application/vnd.aai.asyncapi;version=3.0.0",
                                        "application/vnd.aai.asyncapi+json;version=3.0.0",
                                        "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                                    ]
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/definitions/Reference"
                                        },
                                        {
                                            "$ref": "#/definitions/schema"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "required": [
                                "schemaFormat"
                            ],
                            "properties": {
                                "schemaFormat": {
                                    "enum": [
                                        "application/schema+json;version=draft-07",
                                        "application/schema+yaml;version=draft-07"
                                    ]
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/definitions/Reference"
                                        },
                                        {
                                            "$ref": "#/definitions/json-schema-draft-07-schema"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "required": [
                                "schemaFormat"
                            ],
                            "properties": {
                                "schemaFormat": {
                                    "enum": [
                                        "application/vnd.oai.openapi;version=3.0.0",
                                        "application/vnd.oai.openapi+json;version=3.0.0",
                                        "application/vnd.oai.openapi+yaml;version=3.0.0"
                                    ]
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/definitions/Reference"
                                        },
                                        {
                                            "$ref": "#/definitions/openapiSchema_3_0"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "required": [
                                "schemaFormat"
                            ],
                            "properties": {
                                "schemaFormat": {
                                    "enum": [
                                        "application/vnd.apache.avro;version=1.9.0",
                                        "application/vnd.apache.avro+json;version=1.9.0",
                                        "application/vnd.apache.avro+yaml;version=1.9.0"
                                    ]
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/definitions/Reference"
                                        },
                                        {
                                            "$ref": "#/definitions/avroSchema_v1"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ]
            }
        },
        "openapiSchema_3_0": {
            "type": "object",
            "definitions": {
                "ExternalDocumentation": {
                    "type": "object",
                    "required": [
                        "url"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string",
                            "format": "uri-reference"
                        }
                    },
                    "patternProperties": {
                        "^x-": {}
                    },
                    "additionalProperties": false
                },
                "Discriminator": {
                    "type": "object",
                    "required": [
                        "propertyName"
                    ],
                    "properties": {
                        "propertyName": {
                            "type": "string"
                        },
                        "mapping": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "Reference": {
                    "type": "object",
                    "required": [
                        "$ref"
                    ],
                    "patternProperties": {
                        "^\\$ref$": {
                            "type": "string",
                            "format": "uri-reference"
                        }
                    }
                },
                "XML": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string",
                            "format": "uri"
                        },
                        "prefix": {
                            "type": "string"
                        },
                        "attribute": {
                            "type": "boolean",
                            "default": false
                        },
                        "wrapped": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "patternProperties": {
                        "^x-": {}
                    },
                    "additionalProperties": false
                }
            },
            "properties": {
                "title": {
                    "type": "string"
                },
                "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                },
                "maximum": {
                    "type": "number"
                },
                "exclusiveMaximum": {
                    "type": "boolean",
                    "default": false
                },
                "minimum": {
                    "type": "number"
                },
                "exclusiveMinimum": {
                    "type": "boolean",
                    "default": false
                },
                "maxLength": {
                    "type": "integer",
                    "minimum": 0
                },
                "minLength": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "pattern": {
                    "type": "string",
                    "format": "regex"
                },
                "maxItems": {
                    "type": "integer",
                    "minimum": 0
                },
                "minItems": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "uniqueItems": {
                    "type": "boolean",
                    "default": false
                },
                "maxProperties": {
                    "type": "integer",
                    "minimum": 0
                },
                "minProperties": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                },
                "enum": {
                    "type": "array",
                    "items": true,
                    "minItems": 1,
                    "uniqueItems": false
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "not": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        }
                    ]
                },
                "allOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "anyOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "items": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        }
                    ]
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "additionalProperties": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "default": true
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "default": true,
                "nullable": {
                    "type": "boolean",
                    "default": false
                },
                "discriminator": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/Discriminator"
                },
                "readOnly": {
                    "type": "boolean",
                    "default": false
                },
                "writeOnly": {
                    "type": "boolean",
                    "default": false
                },
                "example": true,
                "externalDocs": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/ExternalDocumentation"
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "xml": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/XML"
                }
            },
            "patternProperties": {
                "^x-": true
            },
            "additionalProperties": false
        },
        "avroSchema_v1": {
            "definitions": {
                "avroSchema": {
                    "title": "Avro Schema",
                    "description": "Root Schema",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    ]
                },
                "types": {
                    "title": "Avro Types",
                    "description": "Allowed Avro types",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveTypeWithMetadata"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/customTypeReference"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroRecord"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroEnum"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroArray"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroMap"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroFixed"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroUnion"
                        }
                    ]
                },
                "primitiveType": {
                    "title": "Primitive Type",
                    "description": "Basic type primitives.",
                    "type": "string",
                    "enum": [
                        "null",
                        "boolean",
                        "int",
                        "long",
                        "float",
                        "double",
                        "bytes",
                        "string"
                    ]
                },
                "primitiveTypeWithMetadata": {
                    "title": "Primitive Type With Metadata",
                    "description": "A primitive type with metadata attached.",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                        }
                    },
                    "required": [
                        "type"
                    ]
                },
                "customTypeReference": {
                    "title": "Custom Type",
                    "description": "Reference to a ComplexType",
                    "not": {
                        "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                    },
                    "type": "string",
                    "pattern": "^[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*$"
                },
                "avroUnion": {
                    "title": "Union",
                    "description": "A Union of types",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
                    },
                    "minItems": 1
                },
                "avroField": {
                    "title": "Field",
                    "description": "A field within a Record",
                    "type": "object",
                    "properties": {
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "type": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "default": true,
                        "order": {
                            "enum": [
                                "ascending",
                                "descending",
                                "ignore"
                            ]
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        }
                    },
                    "required": [
                        "name",
                        "type"
                    ]
                },
                "avroRecord": {
                    "title": "Record",
                    "description": "A Record",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "record"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "fields": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/avroField"
                            }
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "fields"
                    ]
                },
                "avroEnum": {
                    "title": "Enum",
                    "description": "An enumeration",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "enum"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "symbols": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "symbols"
                    ]
                },
                "avroArray": {
                    "title": "Array",
                    "description": "An array",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "array"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "items": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    },
                    "required": [
                        "type",
                        "items"
                    ]
                },
                "avroMap": {
                    "title": "Map",
                    "description": "A map of values",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "map"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "values": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    },
                    "required": [
                        "type",
                        "values"
                    ]
                },
                "avroFixed": {
                    "title": "Fixed",
                    "description": "A fixed sized array of bytes",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "fixed"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "size": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "size"
                    ]
                },
                "name": {
                    "type": "string",
                    "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
                },
                "namespace": {
                    "type": "string",
                    "pattern": "^([A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*)*$"
                }
            },
            "description": "Json-Schema definition for Avro AVSC files.",
            "oneOf": [
                {
                    "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
                }
            ],
            "title": "Avro Schema Definition"
        },
        "correlationId": {
            "type": "object",
            "required": [
                "location"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A optional description of the correlation ID. GitHub Flavored Markdown is allowed."
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the correlation ID",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                }
            }
        },
        "messageBindingsObject": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-message"
                            }
                        }
                    ]
                },
                "ws": {},
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
                            }
                        }
                    ]
                },
                "mqtt5": {},
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0",
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.1.0-message"
                            }
                        }
                    ]
                },
                "anypointmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
                            }
                        }
                    ]
                },
                "nats": {},
                "jms": {},
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
                            }
                        }
                    ]
                },
                "solace": {},
                "googlepubsub": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
                            }
                        }
                    ]
                }
            }
        },
        "bindings-http-0.2.0-message": {
            "title": "HTTP message bindings object",
            "description": "This object contains information about the message representation in HTTP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "headers": {
                    "$ref": "#/definitions/schema",
                    "description": "\tA Schema object containing the definitions for HTTP-specific headers. This schema MUST be of type 'object' and have a 'properties' key."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
                }
            },
            "examples": [
                {
                    "headers": {
                        "type": "object",
                        "properties": {
                            "Content-Type": {
                                "type": "string",
                                "enum": [
                                    "application/json"
                                ]
                            }
                        }
                    },
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-amqp-0.3.0-message": {
            "title": "AMQP message bindings object",
            "description": "This object contains information about the message representation in AMQP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "contentEncoding": {
                    "type": "string",
                    "description": "A MIME encoding for the message content."
                },
                "messageType": {
                    "type": "string",
                    "description": "Application-specific message type."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
                }
            },
            "examples": [
                {
                    "contentEncoding": "gzip",
                    "messageType": "user.signup",
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-mqtt-0.2.0-message": {
            "title": "MQTT message bindings object",
            "description": "This object contains information about the message representation in MQTT.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-kafka-0.4.0-message": {
            "title": "Message Schema",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "key": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/schema"
                        }
                    ],
                    "description": "The message key."
                },
                "schemaIdLocation": {
                    "type": "string",
                    "description": "If a Schema Registry is used when performing this operation, tells where the id of schema is stored.",
                    "enum": [
                        "header",
                        "payload"
                    ]
                },
                "schemaIdPayloadEncoding": {
                    "type": "string",
                    "description": "Number of bytes or vendor specific values when schema id is encoded in payload."
                },
                "schemaLookupStrategy": {
                    "type": "string",
                    "description": "Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.4.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "key": {
                        "type": "string",
                        "enum": [
                            "myKey"
                        ]
                    },
                    "schemaIdLocation": "payload",
                    "schemaIdPayloadEncoding": "apicurio-new",
                    "schemaLookupStrategy": "TopicIdStrategy",
                    "bindingVersion": "0.4.0"
                },
                {
                    "key": {
                        "$ref": "path/to/user-create.avsc#/UserCreate"
                    },
                    "schemaIdLocation": "payload",
                    "schemaIdPayloadEncoding": "4",
                    "bindingVersion": "0.4.0"
                }
            ]
        },
        "bindings-kafka-0.3.0-message": {
            "title": "Message Schema",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "key": {
                    "$ref": "#/definitions/schema",
                    "description": "The message key."
                },
                "schemaIdLocation": {
                    "type": "string",
                    "description": "If a Schema Registry is used when performing this operation, tells where the id of schema is stored.",
                    "enum": [
                        "header",
                        "payload"
                    ]
                },
                "schemaIdPayloadEncoding": {
                    "type": "string",
                    "description": "Number of bytes or vendor specific values when schema id is encoded in payload."
                },
                "schemaLookupStrategy": {
                    "type": "string",
                    "description": "Freeform string for any naming strategy class to use. Clients should default to the vendor default if not supplied."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "key": {
                        "type": "string",
                        "enum": [
                            "myKey"
                        ]
                    },
                    "schemaIdLocation": "payload",
                    "schemaIdPayloadEncoding": "apicurio-new",
                    "schemaLookupStrategy": "TopicIdStrategy",
                    "bindingVersion": "0.3.0"
                },
                {
                    "key": {
                        "$ref": "path/to/user-create.avsc#/UserCreate"
                    },
                    "schemaIdLocation": "payload",
                    "schemaIdPayloadEncoding": "4",
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-kafka-0.1.0-message": {
            "title": "Kafka message bindings object",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "key": {
                    "$ref": "#/definitions/schema",
                    "description": "The message key."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "key": {
                        "type": "string",
                        "enum": [
                            "myKey"
                        ]
                    },
                    "bindingVersion": "0.1.0"
                },
                {
                    "key": {
                        "$ref": "path/to/user-create.avsc#/UserCreate"
                    },
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-anypointmq-0.0.1-message": {
            "title": "Anypoint MQ message bindings object",
            "description": "This object contains configuration for describing an Anypoint MQ message as an AsyncAPI message. This objects only contains configuration that can not be provided in the AsyncAPI standard message object.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "headers": {
                    "$ref": "#/definitions/schema",
                    "description": "A Schema object containing the definitions for Anypoint MQ-specific headers (protocol headers). This schema MUST be of type 'object' and have a 'properties' key. Examples of Anypoint MQ protocol headers are 'messageId' and 'messageGroupId'."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.0.1"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "headers": {
                        "type": "object",
                        "properties": {
                            "messageId": {
                                "type": "string"
                            }
                        }
                    },
                    "bindingVersion": "0.0.1"
                }
            ]
        },
        "bindings-ibmmq-0.1.0-message": {
            "title": "IBM MQ message bindings object",
            "description": "This object contains information about the message representation in IBM MQ.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "string",
                        "jms",
                        "binary"
                    ],
                    "default": "string",
                    "description": "The type of the message."
                },
                "headers": {
                    "type": "string",
                    "description": "Defines the IBM MQ message headers to include with this message. More than one header can be specified as a comma separated list. Supporting information on IBM MQ message formats can be found on this [page](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mqmd-format-mqchar8) in the IBM MQ Knowledge Center."
                },
                "description": {
                    "type": "string",
                    "description": "Provides additional information for application developers: describes the message type or format."
                },
                "expiry": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "description": "The recommended setting the client should use for the TTL (Time-To-Live) of the message. This is a period of time expressed in milliseconds and set by the application that puts the message. 'expiry' values are API dependant e.g., MQI and JMS use different units of time and default values for 'unlimited'. General information on IBM MQ message expiry can be found on this [page](https://www.ibm.com/docs/en/ibm-mq/9.2?topic=mqmd-expiry-mqlong) in the IBM MQ Knowledge Center."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "oneOf": [
                {
                    "properties": {
                        "type": {
                            "const": "binary"
                        }
                    }
                },
                {
                    "properties": {
                        "type": {
                            "const": "jms"
                        }
                    },
                    "not": {
                        "required": [
                            "headers"
                        ]
                    }
                },
                {
                    "properties": {
                        "type": {
                            "const": "string"
                        }
                    },
                    "not": {
                        "required": [
                            "headers"
                        ]
                    }
                }
            ],
            "examples": [
                {
                    "type": "string",
                    "bindingVersion": "0.1.0"
                },
                {
                    "type": "jms",
                    "description": "JMS stream message",
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-googlepubsub-0.2.0-message": {
            "title": "Cloud Pub/Sub Channel Schema",
            "description": "This object contains information about the message representation for Google Cloud Pub/Sub.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding."
                },
                "attributes": {
                    "type": "object"
                },
                "orderingKey": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "additionalItems": false,
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ]
                }
            },
            "examples": [
                {
                    "schema": {
                        "name": "projects/your-project-id/schemas/your-avro-schema-id"
                    }
                },
                {
                    "schema": {
                        "name": "projects/your-project-id/schemas/your-protobuf-schema-id"
                    }
                }
            ]
        },
        "messageTrait": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/anySchema"
                },
                "correlationId": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/correlationId"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the message."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the message."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the message. CommonMark is allowed."
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/messageBindingsObject"
                        }
                    ]
                }
            }
        },
        "parameters": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/parameter"
                    }
                ]
            },
            "description": "JSON objects describing re-usable channel parameters."
        },
        "parameter": {
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed."
                },
                "enum": {
                    "description": "A list of allowed values for the parameter.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default": {
                    "description": "The default value to use for the parameter.",
                    "type": "string"
                },
                "examples": {
                    "description": "List of example values to use for the parameter.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the parameter value",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                }
            }
        },
        "channelBindingsObject": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {},
                "ws": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
                            }
                        }
                    ]
                },
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {},
                "mqtt5": {},
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-channel"
                            }
                        }
                    ]
                },
                "anypointmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
                            }
                        }
                    ]
                },
                "nats": {},
                "jms": {},
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
                            }
                        }
                    ]
                },
                "solace": {},
                "googlepubsub": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
                            }
                        }
                    ]
                },
                "pulsar": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
                            }
                        }
                    ]
                }
            }
        },
        "bindings-websockets-0.1.0-channel": {
            "title": "WebSockets channel bindings object",
            "description": "When using WebSockets, the channel represents the connection. Unlike other protocols that support multiple virtual channels (topics, routing keys, etc.) per connection, WebSockets doesn't support virtual channels or, put it another way, there's only one channel and its characteristics are strongly related to the protocol used for the handshake, i.e., HTTP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "method": {
                    "type": "string",
                    "enum": [
                        "GET",
                        "POST"
                    ],
                    "description": "The HTTP method to use when establishing the connection. Its value MUST be either 'GET' or 'POST'."
                },
                "query": {
                    "$ref": "#/definitions/schema",
                    "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a 'properties' key."
                },
                "headers": {
                    "$ref": "#/definitions/schema",
                    "description": "A Schema object containing the definitions of the HTTP headers to use when establishing the connection. This schema MUST be of type 'object' and have a 'properties' key."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "method": "POST",
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-amqp-0.3.0-channel": {
            "title": "AMQP channel bindings object",
            "description": "This object contains information about the channel representation in AMQP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "is": {
                    "type": "string",
                    "enum": [
                        "queue",
                        "routingKey"
                    ],
                    "description": "Defines what type of channel is it. Can be either 'queue' or 'routingKey' (default)."
                },
                "exchange": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "The name of the exchange. It MUST NOT exceed 255 characters long."
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "topic",
                                "direct",
                                "fanout",
                                "default",
                                "headers"
                            ],
                            "description": "The type of the exchange. Can be either 'topic', 'direct', 'fanout', 'default' or 'headers'."
                        },
                        "durable": {
                            "type": "boolean",
                            "description": "Whether the exchange should survive broker restarts or not."
                        },
                        "autoDelete": {
                            "type": "boolean",
                            "description": "Whether the exchange should be deleted when the last queue is unbound from it."
                        },
                        "vhost": {
                            "type": "string",
                            "default": "/",
                            "description": "The virtual host of the exchange. Defaults to '/'."
                        }
                    },
                    "description": "When is=routingKey, this object defines the exchange properties."
                },
                "queue": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "maxLength": 255,
                            "description": "The name of the queue. It MUST NOT exceed 255 characters long."
                        },
                        "durable": {
                            "type": "boolean",
                            "description": "Whether the queue should survive broker restarts or not."
                        },
                        "exclusive": {
                            "type": "boolean",
                            "description": "Whether the queue should be used only by one connection or not."
                        },
                        "autoDelete": {
                            "type": "boolean",
                            "description": "Whether the queue should be deleted when the last consumer unsubscribes."
                        },
                        "vhost": {
                            "type": "string",
                            "default": "/",
                            "description": "The virtual host of the queue. Defaults to '/'."
                        }
                    },
                    "description": "When is=queue, this object defines the queue properties."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "oneOf": [
                {
                    "properties": {
                        "is": {
                            "const": "routingKey"
                        }
                    },
                    "required": [
                        "exchange"
                    ],
                    "not": {
                        "required": [
                            "queue"
                        ]
                    }
                },
                {
                    "properties": {
                        "is": {
                            "const": "queue"
                        }
                    },
                    "required": [
                        "queue"
                    ],
                    "not": {
                        "required": [
                            "exchange"
                        ]
                    }
                }
            ],
            "examples": [
                {
                    "is": "routingKey",
                    "exchange": {
                        "name": "myExchange",
                        "type": "topic",
                        "durable": true,
                        "autoDelete": false,
                        "vhost": "/"
                    },
                    "bindingVersion": "0.3.0"
                },
                {
                    "is": "queue",
                    "queue": {
                        "name": "my-queue-name",
                        "durable": true,
                        "exclusive": true,
                        "autoDelete": false,
                        "vhost": "/"
                    },
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-kafka-0.4.0-channel": {
            "title": "Channel Schema",
            "description": "This object contains information about the channel representation in Kafka.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Kafka topic name if different from channel name."
                },
                "partitions": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of partitions configured on this topic."
                },
                "replicas": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of replicas configured on this topic."
                },
                "topicConfiguration": {
                    "description": "Topic configuration properties that are relevant for the API.",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "cleanup.policy": {
                            "description": "The [`cleanup.policy`](https://kafka.apache.org/documentation/#topicconfigs_cleanup.policy) configuration option.",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "compact",
                                    "delete"
                                ]
                            }
                        },
                        "retention.ms": {
                            "description": "The [`retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_retention.ms) configuration option.",
                            "type": "integer",
                            "minimum": -1
                        },
                        "retention.bytes": {
                            "description": "The [`retention.bytes`](https://kafka.apache.org/documentation/#topicconfigs_retention.bytes) configuration option.",
                            "type": "integer",
                            "minimum": -1
                        },
                        "delete.retention.ms": {
                            "description": "The [`delete.retention.ms`](https://kafka.apache.org/documentation/#topicconfigs_delete.retention.ms) configuration option.",
                            "type": "integer",
                            "minimum": 0
                        },
                        "max.message.bytes": {
                            "description": "The [`max.message.bytes`](https://kafka.apache.org/documentation/#topicconfigs_max.message.bytes) configuration option.",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.4.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "topic": "my-specific-topic",
                    "partitions": 20,
                    "replicas": 3,
                    "bindingVersion": "0.4.0"
                }
            ]
        },
        "bindings-kafka-0.3.0-channel": {
            "title": "Channel Schema",
            "description": "This object contains information about the channel representation in Kafka.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "topic": {
                    "type": "string",
                    "description": "Kafka topic name if different from channel name."
                },
                "partitions": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of partitions configured on this topic."
                },
                "replicas": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Number of replicas configured on this topic."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "topic": "my-specific-topic",
                    "partitions": 20,
                    "replicas": 3,
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-anypointmq-0.0.1-channel": {
            "title": "Anypoint MQ channel bindings object",
            "description": "This object contains configuration for describing an Anypoint MQ exchange, queue, or FIFO queue as an AsyncAPI channel. This objects only contains configuration that can not be provided in the AsyncAPI standard channel object.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "The destination (queue or exchange) name for this channel. SHOULD only be specified if the channel name differs from the actual destination name, such as when the channel name is not a valid destination name in Anypoint MQ. Defaults to the channel name."
                },
                "destinationType": {
                    "type": "string",
                    "enum": [
                        "exchange",
                        "queue",
                        "fifo-queue"
                    ],
                    "default": "queue",
                    "description": "The type of destination. SHOULD be specified to document the messaging model (publish/subscribe, point-to-point, strict message ordering) supported by this channel."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.0.1"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "destination": "user-signup-exchg",
                    "destinationType": "exchange",
                    "bindingVersion": "0.0.1"
                }
            ]
        },
        "bindings-ibmmq-0.1.0-channel": {
            "title": "IBM MQ channel bindings object",
            "description": "This object contains information about the channel representation in IBM MQ. Each channel corresponds to a Queue or Topic within IBM MQ.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "destinationType": {
                    "type": "string",
                    "enum": [
                        "topic",
                        "queue"
                    ],
                    "default": "topic",
                    "description": "Defines the type of AsyncAPI channel."
                },
                "queue": {
                    "type": "object",
                    "description": "Defines the properties of a queue.",
                    "properties": {
                        "objectName": {
                            "type": "string",
                            "maxLength": 48,
                            "description": "Defines the name of the IBM MQ queue associated with the channel."
                        },
                        "isPartitioned": {
                            "type": "boolean",
                            "default": false,
                            "description": "Defines if the queue is a cluster queue and therefore partitioned. If 'true', a binding option MAY be specified when accessing the queue. More information on binding options can be found on this page in the IBM MQ Knowledge Center."
                        },
                        "exclusive": {
                            "type": "boolean",
                            "default": false,
                            "description": "Specifies if it is recommended to open the queue exclusively."
                        }
                    },
                    "required": [
                        "objectName"
                    ]
                },
                "topic": {
                    "type": "object",
                    "description": "Defines the properties of a topic.",
                    "properties": {
                        "string": {
                            "type": "string",
                            "maxLength": 10240,
                            "description": "The value of the IBM MQ topic string to be used."
                        },
                        "objectName": {
                            "type": "string",
                            "maxLength": 48,
                            "description": "The name of the IBM MQ topic object."
                        },
                        "durablePermitted": {
                            "type": "boolean",
                            "default": true,
                            "description": "Defines if the subscription may be durable."
                        },
                        "lastMsgRetained": {
                            "type": "boolean",
                            "default": false,
                            "description": "Defines if the last message published will be made available to new subscriptions."
                        }
                    }
                },
                "maxMsgLength": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 104857600,
                    "description": "The maximum length of the physical message (in bytes) accepted by the Topic or Queue. Messages produced that are greater in size than this value may fail to be delivered. More information on the maximum message length can be found on this [page](https://www.ibm.com/support/knowledgecenter/SSFKSJ_latest/com.ibm.mq.ref.dev.doc/q097520_.html) in the IBM MQ Knowledge Center."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding."
                }
            },
            "oneOf": [
                {
                    "properties": {
                        "destinationType": {
                            "const": "topic"
                        }
                    },
                    "not": {
                        "required": [
                            "queue"
                        ]
                    }
                },
                {
                    "properties": {
                        "destinationType": {
                            "const": "queue"
                        }
                    },
                    "required": [
                        "queue"
                    ],
                    "not": {
                        "required": [
                            "topic"
                        ]
                    }
                }
            ],
            "examples": [
                {
                    "destinationType": "topic",
                    "topic": {
                        "objectName": "myTopicName"
                    },
                    "bindingVersion": "0.1.0"
                },
                {
                    "destinationType": "queue",
                    "queue": {
                        "objectName": "myQueueName",
                        "exclusive": true
                    },
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-googlepubsub-0.2.0-channel": {
            "title": "Cloud Pub/Sub Channel Schema",
            "description": "This object contains information about the channel representation for Google Cloud Pub/Sub.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding."
                },
                "labels": {
                    "type": "object"
                },
                "messageRetentionDuration": {
                    "type": "string"
                },
                "messageStoragePolicy": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "allowedPersistenceRegions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "schemaSettings": {
                    "type": "object",
                    "additionalItems": false,
                    "properties": {
                        "encoding": {
                            "type": "string"
                        },
                        "firstRevisionId": {
                            "type": "string"
                        },
                        "lastRevisionId": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "encoding",
                        "name"
                    ]
                }
            },
            "required": [
                "schemaSettings"
            ],
            "examples": [
                {
                    "labels": {
                        "label1": "value1",
                        "label2": "value2"
                    },
                    "messageRetentionDuration": "86400s",
                    "messageStoragePolicy": {
                        "allowedPersistenceRegions": [
                            "us-central1",
                            "us-east1"
                        ]
                    },
                    "schemaSettings": {
                        "encoding": "json",
                        "name": "projects/your-project-id/schemas/your-schema"
                    }
                }
            ]
        },
        "bindings-pulsar-0.1.0-channel": {
            "title": "Channel Schema",
            "description": "This object contains information about the channel representation in Pulsar, which covers namespace and topic level admin configuration. This object contains additional information not possible to represent within the core AsyncAPI specification.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "required": [
                "namespace",
                "persistence"
            ],
            "properties": {
                "namespace": {
                    "type": "string",
                    "description": "The namespace, the channel is associated with."
                },
                "persistence": {
                    "type": "string",
                    "enum": [
                        "persistent",
                        "non-persistent"
                    ],
                    "description": "persistence of the topic in Pulsar."
                },
                "compaction": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Topic compaction threshold given in MB"
                },
                "geo-replication": {
                    "type": "array",
                    "description": "A list of clusters the topic is replicated to.",
                    "items": {
                        "type": "string"
                    }
                },
                "retention": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "time": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Time given in Minutes. `0` = Disable message retention."
                        },
                        "size": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Size given in MegaBytes. `0` = Disable message retention."
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "TTL in seconds for the specified topic"
                },
                "deduplication": {
                    "type": "boolean",
                    "description": "Whether deduplication of events is enabled or not."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "namespace": "ns1",
                    "persistence": "persistent",
                    "compaction": 1000,
                    "retention": {
                        "time": 15,
                        "size": 1000
                    },
                    "ttl": 360,
                    "geo-replication": [
                        "us-west",
                        "us-east"
                    ],
                    "deduplication": true,
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "operations": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/operation"
                    }
                ]
            }
        },
        "operation": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "required": [
                "action",
                "channel"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Allowed values are send and receive. Use send when it's expected that the application will send a message to the given channel, and receive when the application should expect receiving messages from the given channel.",
                    "enum": [
                        "send",
                        "receive"
                    ]
                },
                "channel": {
                    "$ref": "#/definitions/Reference"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }
                },
                "reply": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationReply"
                        }
                    ]
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/operationTrait"
                            }
                        ]
                    }
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the operation."
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the operation."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the operation. CommonMark is allowed."
                },
                "security": {
                    "$ref": "#/definitions/securityRequirements"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationBindingsObject"
                        }
                    ]
                }
            }
        },
        "operationReply": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "address": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationReplyAddress"
                        }
                    ]
                },
                "channel": {
                    "$ref": "#/definitions/Reference"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }
                }
            }
        },
        "operationReplyAddress": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "required": [
                "location"
            ],
            "properties": {
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the reply address.",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the address. CommonMark is allowed."
                }
            }
        },
        "operationTrait": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "title": {
                    "$ref": "#/definitions/operation/properties/title"
                },
                "summary": {
                    "$ref": "#/definitions/operation/properties/summary"
                },
                "description": {
                    "$ref": "#/definitions/operation/properties/description"
                },
                "security": {
                    "$ref": "#/definitions/operation/properties/security"
                },
                "tags": {
                    "$ref": "#/definitions/operation/properties/tags"
                },
                "externalDocs": {
                    "$ref": "#/definitions/operation/properties/externalDocs"
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationBindingsObject"
                        }
                    ]
                }
            }
        },
        "operationBindingsObject": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-operation"
                            }
                        }
                    ]
                },
                "ws": {},
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
                            }
                        }
                    ]
                },
                "mqtt5": {},
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0",
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.1.0-operation"
                            }
                        }
                    ]
                },
                "anypointmq": {},
                "nats": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
                            }
                        }
                    ]
                },
                "jms": {},
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {},
                "solace": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0",
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.2.0-operation"
                            }
                        }
                    ]
                },
                "googlepubsub": {}
            }
        },
        "bindings-http-0.2.0-operation": {
            "title": "HTTP operation bindings object",
            "description": "This object contains information about the operation representation in HTTP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "method": {
                    "type": "string",
                    "enum": [
                        "GET",
                        "PUT",
                        "POST",
                        "PATCH",
                        "DELETE",
                        "HEAD",
                        "OPTIONS",
                        "CONNECT",
                        "TRACE"
                    ],
                    "description": "When 'type' is 'request', this is the HTTP method, otherwise it MUST be ignored. Its value MUST be one of 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS', 'CONNECT', and 'TRACE'."
                },
                "query": {
                    "$ref": "#/definitions/schema",
                    "description": "A Schema object containing the definitions for each query parameter. This schema MUST be of type 'object' and have a properties key."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "query": {
                        "type": "object",
                        "required": [
                            "companyId"
                        ],
                        "properties": {
                            "companyId": {
                                "type": "number",
                                "minimum": 1,
                                "description": "The Id of the company."
                            }
                        },
                        "additionalProperties": false
                    },
                    "bindingVersion": "0.2.0"
                },
                {
                    "method": "GET",
                    "query": {
                        "type": "object",
                        "required": [
                            "companyId"
                        ],
                        "properties": {
                            "companyId": {
                                "type": "number",
                                "minimum": 1,
                                "description": "The Id of the company."
                            }
                        },
                        "additionalProperties": false
                    },
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-amqp-0.3.0-operation": {
            "title": "AMQP operation bindings object",
            "description": "This object contains information about the operation representation in AMQP.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "expiration": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "TTL (Time-To-Live) for the message. It MUST be greater than or equal to zero."
                },
                "userId": {
                    "type": "string",
                    "description": "Identifies the user who has sent the message."
                },
                "cc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The routing keys the message should be routed to at the time of publishing."
                },
                "priority": {
                    "type": "integer",
                    "description": "A priority for the message."
                },
                "deliveryMode": {
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ],
                    "description": "Delivery mode of the message. Its value MUST be either 1 (transient) or 2 (persistent)."
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Whether the message is mandatory or not."
                },
                "bcc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Like cc but consumers will not receive this information."
                },
                "timestamp": {
                    "type": "boolean",
                    "description": "Whether the message should include a timestamp or not."
                },
                "ack": {
                    "type": "boolean",
                    "description": "Whether the consumer should ack the message or not."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
                }
            },
            "examples": [
                {
                    "expiration": 100000,
                    "userId": "guest",
                    "cc": [
                        "user.logs"
                    ],
                    "priority": 10,
                    "deliveryMode": 2,
                    "mandatory": false,
                    "bcc": [
                        "external.audit"
                    ],
                    "timestamp": true,
                    "ack": false,
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-mqtt-0.2.0-operation": {
            "title": "MQTT operation bindings object",
            "description": "This object contains information about the operation representation in MQTT.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "qos": {
                    "type": "integer",
                    "description": "Defines the Quality of Service (QoS) levels for the message flow between client and server. Its value MUST be either 0 (At most once delivery), 1 (At least once delivery), or 2 (Exactly once delivery)."
                },
                "retain": {
                    "type": "boolean",
                    "description": "Whether the broker should retain the message or not."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "qos": 2,
                    "retain": true,
                    "bindingVersion": "0.2.0"
                }
            ]
        },
        "bindings-kafka-0.4.0-operation": {
            "title": "Operation Schema",
            "description": "This object contains information about the operation representation in Kafka.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "groupId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer group."
                },
                "clientId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer inside a consumer group."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.4.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "groupId": {
                        "type": "string",
                        "enum": [
                            "myGroupId"
                        ]
                    },
                    "clientId": {
                        "type": "string",
                        "enum": [
                            "myClientId"
                        ]
                    },
                    "bindingVersion": "0.4.0"
                }
            ]
        },
        "bindings-kafka-0.3.0-operation": {
            "title": "Operation Schema",
            "description": "This object contains information about the operation representation in Kafka.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "groupId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer group."
                },
                "clientId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer inside a consumer group."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.3.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "groupId": {
                        "type": "string",
                        "enum": [
                            "myGroupId"
                        ]
                    },
                    "clientId": {
                        "type": "string",
                        "enum": [
                            "myClientId"
                        ]
                    },
                    "bindingVersion": "0.3.0"
                }
            ]
        },
        "bindings-kafka-0.1.0-operation": {
            "title": "Kafka operation message bindings object",
            "description": "This object contains information about the operation representation in Kafka.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "groupId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer group."
                },
                "clientId": {
                    "$ref": "#/definitions/schema",
                    "description": "Id of the consumer inside a consumer group."
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "groupId": {
                        "type": "string",
                        "enum": [
                            "myGroupId"
                        ]
                    },
                    "clientId": {
                        "type": "string",
                        "enum": [
                            "myClientId"
                        ]
                    },
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-nats-0.1.0-operation": {
            "title": "NATS operation bindings object",
            "description": "This object contains information about the operation representation in NATS.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "queue": {
                    "type": "string",
                    "description": "Defines the name of the queue to use. It MUST NOT exceed 255 characters.",
                    "maxLength": 255
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.1.0"
                    ],
                    "description": "The version of this binding. If omitted, 'latest' MUST be assumed."
                }
            },
            "examples": [
                {
                    "queue": "MyCustomQueue",
                    "bindingVersion": "0.1.0"
                }
            ]
        },
        "bindings-solace-0.3.0-operation": {
            "title": "Solace operation bindings object",
            "description": "This object contains information about the operation representation in Solace.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "destinations": {
                    "description": "The list of Solace destinations referenced in the operation.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deliveryMode": {
                                "type": "string",
                                "enum": [
                                    "direct",
                                    "persistent"
                                ]
                            }
                        },
                        "oneOf": [
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "queue",
                                        "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name."
                                    },
                                    "queue": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the queue"
                                            },
                                            "topicSubscriptions": {
                                                "type": "array",
                                                "description": "The list of topics that the queue subscribes to.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "accessType": {
                                                "type": "string",
                                                "enum": [
                                                    "exclusive",
                                                    "nonexclusive"
                                                ]
                                            },
                                            "maxTtl": {
                                                "type": "string",
                                                "description": "The maximum TTL to apply to messages to be spooled."
                                            },
                                            "maxMsgSpoolUsage": {
                                                "type": "string",
                                                "description": "The maximum amount of message spool that the given queue may use"
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "topic",
                                        "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name."
                                    },
                                    "topicSubscriptions": {
                                        "type": "array",
                                        "description": "The list of topics that the client subscribes to.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "bindingVersion": {
                "type": "string",
                "enum": [
                    "0.3.0"
                ],
                "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
            },
            "examples": [
                {
                    "bindingVersion": "0.3.0",
                    "destinations": [
                        {
                            "destinationType": "queue",
                            "queue": {
                                "name": "sampleQueue",
                                "topicSubscriptions": [
                                    "samples/*"
                                ],
                                "accessType": "nonexclusive"
                            }
                        },
                        {
                            "destinationType": "topic",
                            "topicSubscriptions": [
                                "samples/*"
                            ]
                        }
                    ]
                }
            ]
        },
        "bindings-solace-0.2.0-operation": {
            "title": "Solace operation bindings object",
            "description": "This object contains information about the operation representation in Solace.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "destinations": {
                    "description": "The list of Solace destinations referenced in the operation.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deliveryMode": {
                                "type": "string",
                                "enum": [
                                    "direct",
                                    "persistent"
                                ]
                            }
                        },
                        "oneOf": [
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "queue",
                                        "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name."
                                    },
                                    "queue": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the queue"
                                            },
                                            "topicSubscriptions": {
                                                "type": "array",
                                                "description": "The list of topics that the queue subscribes to.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "accessType": {
                                                "type": "string",
                                                "enum": [
                                                    "exclusive",
                                                    "nonexclusive"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "topic",
                                        "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name."
                                    },
                                    "topicSubscriptions": {
                                        "type": "array",
                                        "description": "The list of topics that the client subscribes to.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "bindingVersion": {
                "type": "string",
                "enum": [
                    "0.2.0"
                ],
                "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
            },
            "examples": [
                {
                    "bindingVersion": "0.2.0",
                    "destinations": [
                        {
                            "destinationType": "queue",
                            "queue": {
                                "name": "sampleQueue",
                                "topicSubscriptions": [
                                    "samples/*"
                                ],
                                "accessType": "nonexclusive"
                            }
                        },
                        {
                            "destinationType": "topic",
                            "topicSubscriptions": [
                                "samples/*"
                            ]
                        }
                    ]
                }
            ]
        },
        "components": {
            "type": "object",
            "description": "An object to hold a set of reusable objects for different aspects of the AsyncAPI Specification.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "schemas": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/anySchema"
                                }
                            ]
                        }
                    }
                },
                "servers": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/server"
                                }
                            ]
                        }
                    }
                },
                "channels": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/channel"
                                }
                            ]
                        }
                    }
                },
                "serverVariables": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/serverVariable"
                                }
                            ]
                        }
                    }
                },
                "operations": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operation"
                                }
                            ]
                        }
                    }
                },
                "messages": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageObject"
                                }
                            ]
                        }
                    }
                },
                "securitySchemes": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/SecurityScheme"
                                }
                            ]
                        }
                    }
                },
                "parameters": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/parameter"
                                }
                            ]
                        }
                    }
                },
                "correlationIds": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/correlationId"
                                }
                            ]
                        }
                    }
                },
                "operationTraits": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationTrait"
                                }
                            ]
                        }
                    }
                },
                "messageTraits": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageTrait"
                                }
                            ]
                        }
                    }
                },
                "replies": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationReply"
                                }
                            ]
                        }
                    }
                },
                "replyAddresses": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationReplyAddress"
                                }
                            ]
                        }
                    }
                },
                "serverBindings": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/serverBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "channelBindings": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/channelBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "operationBindings": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "messageBindings": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "tags": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/tag"
                                }
                            ]
                        }
                    }
                },
                "externalDocs": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/externalDocs"
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "description": "!!Auto generated!! \n Do not manually edit. "
}