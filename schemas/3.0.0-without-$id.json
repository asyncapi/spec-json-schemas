{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "AsyncAPI 3.0.0 schema.",
    "type": "object",
    "required": [
        "asyncapi",
        "info"
    ],
    "additionalProperties": false,
    "patternProperties": {
        "^x-[\\w\\d\\.\\x2d_]+$": {
            "$ref": "#/definitions/specificationExtension"
        }
    },
    "properties": {
        "asyncapi": {
            "type": "string",
            "const": "3.0.0",
            "description": "The AsyncAPI specification version of this document."
        },
        "id": {
            "type": "string",
            "description": "A unique id representing the application.",
            "format": "uri"
        },
        "info": {
            "$ref": "#/definitions/info"
        },
        "servers": {
            "$ref": "#/definitions/servers"
        },
        "defaultContentType": {
            "type": "string",
            "description": "Default content type to use when encoding/decoding a message's payload."
        },
        "channels": {
            "$ref": "#/definitions/channels"
        },
        "operations": {
            "$ref": "#/definitions/operations"
        },
        "components": {
            "$ref": "#/definitions/components"
        }
    },
    "definitions": {
        "specificationExtension": {
            "description": "Any property starting with x- is valid.",
            "additionalProperties": true,
            "additionalItems": true
        },
        "contact": {
            "type": "object",
            "description": "Contact information for the exposed API.",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The identifying name of the contact person/organization."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the contact information.",
                    "format": "uri"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the contact person/organization.",
                    "format": "email"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "examples": [
                {
                    "name": "API Support",
                    "url": "https://www.example.com/support",
                    "email": "support@example.com"
                }
            ]
        },
        "license": {
            "type": "object",
            "required": [
                "name"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the license type. It's encouraged to use an OSI compatible license."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the license.",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "examples": [
                {
                    "name": "Apache 2.0",
                    "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
                }
            ]
        },
        "ReferenceObject": {
            "type": "string",
            "format": "uri-reference"
        },
        "Reference": {
            "type": "object",
            "description": "A simple object to allow referencing other components in the specification, internally and externally.",
            "required": [
                "$ref"
            ],
            "properties": {
                "$ref": {
                    "$ref": "#/definitions/ReferenceObject"
                }
            },
            "examples": [
                {
                    "$ref": "#/components/schemas/Pet"
                }
            ]
        },
        "externalDocs": {
            "type": "object",
            "additionalProperties": false,
            "description": "Allows referencing an external resource for extended documentation.",
            "required": [
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A short description of the target documentation. CommonMark syntax can be used for rich text representation."
                },
                "url": {
                    "type": "string",
                    "description": "The URL for the target documentation. This MUST be in the form of an absolute URL.",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "examples": [
                {
                    "description": "Find more info here",
                    "url": "https://example.com"
                }
            ]
        },
        "tag": {
            "type": "object",
            "description": "Allows adding metadata to a single tag.",
            "additionalProperties": false,
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag."
                },
                "description": {
                    "type": "string",
                    "description": "A short description for the tag. CommonMark syntax can be used for rich text representation."
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "examples": [
                {
                    "name": "user",
                    "description": "User-related messages"
                }
            ]
        },
        "schema": {
            "description": "The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is a superset of the JSON Schema Specification Draft 07. The empty schema (which allows any instance to validate) MAY be represented by the boolean value true and a schema which allows no instance to validate MAY be represented by the boolean value false.",
            "allOf": [
                {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                {
                    "patternProperties": {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            "$ref": "#/definitions/specificationExtension"
                        }
                    },
                    "properties": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/schema"
                                },
                                {
                                    "type": "boolean"
                                }
                            ],
                            "default": {}
                        },
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/schema"
                                },
                                {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "$ref": "#/definitions/schema"
                                    }
                                }
                            ],
                            "default": {}
                        },
                        "allOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "oneOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "anyOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/definitions/schema"
                            }
                        },
                        "not": {
                            "$ref": "#/definitions/schema"
                        },
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema"
                            },
                            "default": {}
                        },
                        "patternProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/schema"
                            },
                            "default": {}
                        },
                        "propertyNames": {
                            "$ref": "#/definitions/schema"
                        },
                        "contains": {
                            "$ref": "#/definitions/schema"
                        },
                        "discriminator": {
                            "type": "string",
                            "description": "Adds support for polymorphism. The discriminator is the schema property name that is used to differentiate between other schema that inherit this schema. The property name used MUST be defined at this schema and it MUST be in the required property list. When used, the value MUST be the name of this schema or any schema that inherits it. See Composition and Inheritance for more details."
                        },
                        "externalDocs": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/externalDocs"
                                }
                            ]
                        },
                        "deprecated": {
                            "type": "boolean",
                            "description": "Specifies that a schema is deprecated and SHOULD be transitioned out of usage. Default value is false.",
                            "default": false
                        }
                    }
                }
            ]
        },
        "infoExtensions": {
            "type": "object",
            "description": "The object that lists all the extensions of Info",
            "properties": {
                "x-x": {
                    "$ref": "#/definitions/extensions-x-0.1.0-schema"
                },
                "x-linkedin": {
                    "$ref": "#/definitions/extensions-linkedin-0.1.0-schema"
                }
            }
        },
        "info": {
            "description": "The object provides metadata about the API. The metadata can be used by the clients if needed.",
            "allOf": [
                {
                    "type": "object",
                    "required": [
                        "version",
                        "title"
                    ],
                    "additionalProperties": false,
                    "patternProperties": {
                        "^x-[\\w\\d\\.\\x2d_]+$": {
                            "$ref": "#/definitions/specificationExtension"
                        }
                    },
                    "properties": {
                        "title": {
                            "type": "string",
                            "description": "A unique and precise title of the API."
                        },
                        "version": {
                            "type": "string",
                            "description": "A semantic version number of the API."
                        },
                        "description": {
                            "type": "string",
                            "description": "A longer description of the API. Should be different from the title. CommonMark is allowed."
                        },
                        "termsOfService": {
                            "type": "string",
                            "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
                            "format": "uri"
                        },
                        "contact": {
                            "$ref": "#/definitions/contact"
                        },
                        "license": {
                            "$ref": "#/definitions/license"
                        },
                        "tags": {
                            "type": "array",
                            "description": "A list of tags for application API documentation control. Tags can be used for logical grouping of applications.",
                            "items": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/Reference"
                                    },
                                    {
                                        "$ref": "#/definitions/tag"
                                    }
                                ]
                            },
                            "uniqueItems": true
                        },
                        "externalDocs": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/externalDocs"
                                }
                            ]
                        }
                    }
                },
                {
                    "$ref": "#/definitions/infoExtensions"
                }
            ],
            "examples": [
                {
                    "title": "AsyncAPI Sample App",
                    "version": "1.0.1",
                    "description": "This is a sample app.",
                    "termsOfService": "https://asyncapi.org/terms/",
                    "contact": {
                        "name": "API Support",
                        "url": "https://www.asyncapi.org/support",
                        "email": "support@asyncapi.org"
                    },
                    "license": {
                        "name": "Apache 2.0",
                        "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "externalDocs": {
                        "description": "Find more info here",
                        "url": "https://www.asyncapi.org"
                    },
                    "tags": [
                        {
                            "name": "e-commerce"
                        }
                    ]
                }
            ]
        },
        "serverVariable": {
            "type": "object",
            "description": "An object representing a Server Variable for server URL template substitution.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "enum": {
                    "type": "array",
                    "description": "An enumeration of string values to be used if the substitution options are from a limited set.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "default": {
                    "type": "string",
                    "description": "The default value to use for substitution, and to send, if an alternate value is not supplied."
                },
                "description": {
                    "type": "string",
                    "description": "An optional description for the server variable. CommonMark syntax MAY be used for rich text representation."
                },
                "examples": {
                    "type": "array",
                    "description": "An array of examples of the server variable.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "examples": [
                {
                    "host": "rabbitmq.in.mycompany.com:5672",
                    "pathname": "/{env}",
                    "protocol": "amqp",
                    "description": "RabbitMQ broker. Use the `env` variable to point to either `production` or `staging`.",
                    "variables": {
                        "env": {
                            "description": "Environment to connect to. It can be either `production` or `staging`.",
                            "enum": [
                                "production",
                                "staging"
                            ]
                        }
                    }
                }
            ]
        },
        "serverVariables": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/serverVariable"
                    }
                ]
            }
        },
        "userPassword": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "userPassword"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "userPassword"
                }
            ]
        },
        "apiKey": {
            "type": "object",
            "required": [
                "type",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme",
                    "enum": [
                        "apiKey"
                    ]
                },
                "in": {
                    "type": "string",
                    "description": " The location of the API key.",
                    "enum": [
                        "user",
                        "password"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "apiKey",
                    "in": "user"
                }
            ]
        },
        "X509": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "X509"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "X509"
                }
            ]
        },
        "symmetricEncryption": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "symmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "symmetricEncryption"
                }
            ]
        },
        "asymmetricEncryption": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "asymmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "NonBearerHTTPSecurityScheme": {
            "not": {
                "type": "object",
                "properties": {
                    "scheme": {
                        "type": "string",
                        "description": "A short description for security scheme.",
                        "enum": [
                            "bearer"
                        ]
                    }
                }
            },
            "type": "object",
            "required": [
                "scheme",
                "type"
            ],
            "properties": {
                "scheme": {
                    "type": "string",
                    "description": "The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235."
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "http"
                    ]
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "BearerHTTPSecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "scheme"
            ],
            "properties": {
                "scheme": {
                    "type": "string",
                    "description": "The name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.",
                    "enum": [
                        "bearer"
                    ]
                },
                "bearerFormat": {
                    "type": "string",
                    "description": "A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "http"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "APIKeyHTTPSecurityScheme": {
            "type": "object",
            "required": [
                "type",
                "name",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "httpApiKey"
                    ]
                },
                "name": {
                    "type": "string",
                    "description": "The name of the header, query or cookie parameter to be used."
                },
                "in": {
                    "type": "string",
                    "description": "The location of the API key",
                    "enum": [
                        "header",
                        "query",
                        "cookie"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "httpApiKey",
                    "name": "api_key",
                    "in": "header"
                }
            ]
        },
        "HTTPSecurityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/NonBearerHTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/BearerHTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/APIKeyHTTPSecurityScheme"
                }
            ]
        },
        "oauth2Scopes": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "oauth2Flow": {
            "type": "object",
            "description": "Configuration details for a supported OAuth Flow",
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The authorization URL to be used for this flow. This MUST be in the form of an absolute URL."
                },
                "tokenUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The token URL to be used for this flow. This MUST be in the form of an absolute URL."
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL to be used for obtaining refresh tokens. This MUST be in the form of an absolute URL."
                },
                "availableScopes": {
                    "$ref": "#/definitions/oauth2Scopes"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "authorizationUrl": "https://example.com/api/oauth/dialog",
                    "tokenUrl": "https://example.com/api/oauth/token",
                    "availableScopes": {
                        "write:pets": "modify pets in your account",
                        "read:pets": "read your pets"
                    }
                }
            ]
        },
        "oauth2Flows": {
            "type": "object",
            "description": "Allows configuration of the supported OAuth Flows.",
            "required": [
                "type",
                "flows"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "oauth2"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                },
                "flows": {
                    "type": "object",
                    "properties": {
                        "implicit": {
                            "description": "Configuration for the OAuth Implicit flow.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "tokenUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "password": {
                            "description": "Configuration for the OAuth Resource Owner Protected Credentials flow.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "clientCredentials": {
                            "description": "Configuration for the OAuth Client Credentials flow.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "authorizationCode": {
                            "description": "Configuration for the OAuth Authorization Code flow.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/oauth2Flow"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "tokenUrl",
                                        "availableScopes"
                                    ]
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "scopes": {
                    "type": "array",
                    "description": "List of the needed scope names.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            }
        },
        "openIdConnect": {
            "type": "object",
            "required": [
                "type",
                "openIdConnectUrl"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "openIdConnect"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme. CommonMark syntax MAY be used for rich text representation."
                },
                "openIdConnectUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of an absolute URL."
                },
                "scopes": {
                    "type": "array",
                    "description": "List of the needed scope names. An empty array means no scopes are needed.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false
        },
        "SaslPlainSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme. Valid values",
                    "enum": [
                        "plain"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "scramSha512"
                }
            ]
        },
        "SaslScramSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "scramSha256",
                        "scramSha512"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "scramSha512"
                }
            ]
        },
        "SaslGssapiSecurityScheme": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the security scheme.",
                    "enum": [
                        "gssapi"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "A short description for security scheme."
                }
            },
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "additionalProperties": false,
            "examples": [
                {
                    "type": "scramSha512"
                }
            ]
        },
        "SaslSecurityScheme": {
            "oneOf": [
                {
                    "$ref": "#/definitions/SaslPlainSecurityScheme"
                },
                {
                    "$ref": "#/definitions/SaslScramSecurityScheme"
                },
                {
                    "$ref": "#/definitions/SaslGssapiSecurityScheme"
                }
            ]
        },
        "SecurityScheme": {
            "description": "Defines a security scheme that can be used by the operations.",
            "oneOf": [
                {
                    "$ref": "#/definitions/userPassword"
                },
                {
                    "$ref": "#/definitions/apiKey"
                },
                {
                    "$ref": "#/definitions/X509"
                },
                {
                    "$ref": "#/definitions/symmetricEncryption"
                },
                {
                    "$ref": "#/definitions/asymmetricEncryption"
                },
                {
                    "$ref": "#/definitions/HTTPSecurityScheme"
                },
                {
                    "$ref": "#/definitions/oauth2Flows"
                },
                {
                    "$ref": "#/definitions/openIdConnect"
                },
                {
                    "$ref": "#/definitions/SaslSecurityScheme"
                }
            ],
            "examples": [
                {
                    "type": "userPassword"
                }
            ]
        },
        "securityRequirements": {
            "description": "An array representing security requirements.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/SecurityScheme"
                    }
                ]
            }
        },
        "json-schema-draft-07-schema": {
            "title": "Core schema meta-schema",
            "definitions": {
                "schemaArray": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    }
                },
                "nonNegativeInteger": {
                    "type": "integer",
                    "minimum": 0
                },
                "nonNegativeIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": []
                }
            },
            "type": [
                "object",
                "boolean"
            ],
            "properties": {
                "$id": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$schema": {
                    "type": "string",
                    "format": "uri"
                },
                "$ref": {
                    "type": "string",
                    "format": "uri-reference"
                },
                "$comment": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "default": true,
                "readOnly": {
                    "type": "boolean",
                    "default": false
                },
                "writeOnly": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": true
                },
                "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                },
                "maximum": {
                    "type": "number"
                },
                "exclusiveMaximum": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "exclusiveMinimum": {
                    "type": "number"
                },
                "maxLength": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minLength": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "pattern": {
                    "type": "string",
                    "format": "regex"
                },
                "additionalItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "items": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema"
                        },
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                        }
                    ],
                    "default": true
                },
                "maxItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minItems": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "uniqueItems": {
                    "type": "boolean",
                    "default": false
                },
                "contains": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "maxProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeInteger"
                },
                "minProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/nonNegativeIntegerDefault0"
                },
                "required": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
                },
                "additionalProperties": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "definitions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "default": {}
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "default": {}
                },
                "patternProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/json-schema-draft-07-schema"
                    },
                    "propertyNames": {
                        "format": "regex"
                    },
                    "default": {}
                },
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/json-schema-draft-07-schema"
                            },
                            {
                                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/stringArray"
                            }
                        ]
                    }
                },
                "propertyNames": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "const": true,
                "enum": {
                    "type": "array",
                    "items": true,
                    "minItems": 1,
                    "uniqueItems": true
                },
                "type": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
                        },
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/json-schema-draft-07-schema/definitions/simpleTypes"
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        }
                    ]
                },
                "format": {
                    "type": "string"
                },
                "contentMediaType": {
                    "type": "string"
                },
                "contentEncoding": {
                    "type": "string"
                },
                "if": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "then": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "else": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                },
                "allOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "anyOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "oneOf": {
                    "$ref": "#/definitions/json-schema-draft-07-schema/definitions/schemaArray"
                },
                "not": {
                    "$ref": "#/definitions/json-schema-draft-07-schema"
                }
            },
            "default": true
        },
        "server": {
            "type": "object",
            "description": "An object representing a message broker, a server or any other kind of computer program capable of sending and/or receiving data.",
            "required": [
                "host",
                "protocol"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The server host name. It MAY include the port. This field supports Server Variables. Variable substitutions will be made when a variable is named in {braces}."
                },
                "pathname": {
                    "type": "string",
                    "description": "The path to a resource in the host. This field supports Server Variables. Variable substitutions will be made when a variable is named in {braces}."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the server."
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the server."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the server. CommonMark is allowed."
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol this server supports for connection."
                },
                "protocolVersion": {
                    "type": "string",
                    "description": "An optional string describing the server. CommonMark syntax MAY be used for rich text representation."
                },
                "variables": {
                    "$ref": "#/definitions/serverVariables"
                },
                "security": {
                    "$ref": "#/definitions/securityRequirements"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/serverBindingsObject"
                        }
                    ]
                }
            },
            "examples": [
                {
                    "host": "kafka.in.mycompany.com:9092",
                    "description": "Production Kafka broker.",
                    "protocol": "kafka",
                    "protocolVersion": "3.2"
                },
                {
                    "host": "rabbitmq.in.mycompany.com:5672",
                    "pathname": "/production",
                    "protocol": "amqp",
                    "description": "Production RabbitMQ broker (uses the `production` vhost)."
                }
            ]
        },
        "serverBindingsObject": {
            "type": "object",
            "description": "Map describing protocol-specific definitions for a server.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {},
                "ws": {},
                "amqp": {},
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-server"
                            }
                        }
                    ]
                },
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.5.0",
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.5.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-server"
                            }
                        }
                    ]
                },
                "anypointmq": {},
                "nats": {},
                "jms": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-server"
                            }
                        }
                    ]
                },
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-server"
                            }
                        }
                    ]
                },
                "solace": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0",
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.4.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.4.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.2.0-server"
                            }
                        }
                    ]
                },
                "googlepubsub": {},
                "pulsar": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-server"
                            }
                        }
                    ]
                }
            }
        },
        "servers": {
            "description": "An object representing multiple servers.",
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/server"
                    }
                ]
            },
            "examples": [
                {
                    "development": {
                        "host": "localhost:5672",
                        "description": "Development AMQP broker.",
                        "protocol": "amqp",
                        "protocolVersion": "0-9-1",
                        "tags": [
                            {
                                "name": "env:development",
                                "description": "This environment is meant for developers to run their own tests."
                            }
                        ]
                    },
                    "staging": {
                        "host": "rabbitmq-staging.in.mycompany.com:5672",
                        "description": "RabbitMQ broker for the staging environment.",
                        "protocol": "amqp",
                        "protocolVersion": "0-9-1",
                        "tags": [
                            {
                                "name": "env:staging",
                                "description": "This environment is a replica of the production environment."
                            }
                        ]
                    },
                    "production": {
                        "host": "rabbitmq.in.mycompany.com:5672",
                        "description": "RabbitMQ broker for the production environment.",
                        "protocol": "amqp",
                        "protocolVersion": "0-9-1",
                        "tags": [
                            {
                                "name": "env:production",
                                "description": "This environment is the live environment available for final users."
                            }
                        ]
                    }
                }
            ]
        },
        "openapiSchema_3_0": {
            "type": "object",
            "definitions": {
                "ExternalDocumentation": {
                    "type": "object",
                    "required": [
                        "url"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string",
                            "format": "uri-reference"
                        }
                    },
                    "patternProperties": {
                        "^x-": {}
                    },
                    "additionalProperties": false
                },
                "Discriminator": {
                    "type": "object",
                    "required": [
                        "propertyName"
                    ],
                    "properties": {
                        "propertyName": {
                            "type": "string"
                        },
                        "mapping": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "Reference": {
                    "type": "object",
                    "required": [
                        "$ref"
                    ],
                    "patternProperties": {
                        "^\\$ref$": {
                            "type": "string",
                            "format": "uri-reference"
                        }
                    }
                },
                "XML": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "namespace": {
                            "type": "string",
                            "format": "uri"
                        },
                        "prefix": {
                            "type": "string"
                        },
                        "attribute": {
                            "type": "boolean",
                            "default": false
                        },
                        "wrapped": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "patternProperties": {
                        "^x-": {}
                    },
                    "additionalProperties": false
                }
            },
            "properties": {
                "title": {
                    "type": "string"
                },
                "multipleOf": {
                    "type": "number",
                    "exclusiveMinimum": 0
                },
                "maximum": {
                    "type": "number"
                },
                "exclusiveMaximum": {
                    "type": "boolean",
                    "default": false
                },
                "minimum": {
                    "type": "number"
                },
                "exclusiveMinimum": {
                    "type": "boolean",
                    "default": false
                },
                "maxLength": {
                    "type": "integer",
                    "minimum": 0
                },
                "minLength": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "pattern": {
                    "type": "string",
                    "format": "regex"
                },
                "maxItems": {
                    "type": "integer",
                    "minimum": 0
                },
                "minItems": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "uniqueItems": {
                    "type": "boolean",
                    "default": false
                },
                "maxProperties": {
                    "type": "integer",
                    "minimum": 0
                },
                "minProperties": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "required": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                },
                "enum": {
                    "type": "array",
                    "items": true,
                    "minItems": 1,
                    "uniqueItems": false
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "not": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        }
                    ]
                },
                "allOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "oneOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "anyOf": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "items": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        }
                    ]
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/openapiSchema_3_0"
                            },
                            {
                                "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                            }
                        ]
                    }
                },
                "additionalProperties": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/openapiSchema_3_0"
                        },
                        {
                            "$ref": "#/definitions/openapiSchema_3_0/definitions/Reference"
                        },
                        {
                            "type": "boolean"
                        }
                    ],
                    "default": true
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "default": true,
                "nullable": {
                    "type": "boolean",
                    "default": false
                },
                "discriminator": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/Discriminator"
                },
                "readOnly": {
                    "type": "boolean",
                    "default": false
                },
                "writeOnly": {
                    "type": "boolean",
                    "default": false
                },
                "example": true,
                "externalDocs": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/ExternalDocumentation"
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "xml": {
                    "$ref": "#/definitions/openapiSchema_3_0/definitions/XML"
                }
            },
            "patternProperties": {
                "^x-": true
            },
            "additionalProperties": false
        },
        "avroSchema_v1": {
            "definitions": {
                "avroSchema": {
                    "title": "Avro Schema",
                    "description": "Root Schema",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    ]
                },
                "types": {
                    "title": "Avro Types",
                    "description": "Allowed Avro types",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveTypeWithMetadata"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/customTypeReference"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroRecord"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroEnum"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroArray"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroMap"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroFixed"
                        },
                        {
                            "$ref": "#/definitions/avroSchema_v1/definitions/avroUnion"
                        }
                    ]
                },
                "primitiveType": {
                    "title": "Primitive Type",
                    "description": "Basic type primitives.",
                    "type": "string",
                    "enum": [
                        "null",
                        "boolean",
                        "int",
                        "long",
                        "float",
                        "double",
                        "bytes",
                        "string"
                    ]
                },
                "primitiveTypeWithMetadata": {
                    "title": "Primitive Type With Metadata",
                    "description": "A primitive type with metadata attached.",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                        }
                    },
                    "required": [
                        "type"
                    ]
                },
                "customTypeReference": {
                    "title": "Custom Type",
                    "description": "Reference to a ComplexType",
                    "not": {
                        "$ref": "#/definitions/avroSchema_v1/definitions/primitiveType"
                    },
                    "type": "string",
                    "pattern": "^[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*$"
                },
                "avroUnion": {
                    "title": "Union",
                    "description": "A Union of types",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
                    },
                    "minItems": 1
                },
                "avroField": {
                    "title": "Field",
                    "description": "A field within a Record",
                    "type": "object",
                    "properties": {
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "type": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "default": true,
                        "order": {
                            "enum": [
                                "ascending",
                                "descending",
                                "ignore"
                            ]
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        }
                    },
                    "required": [
                        "name",
                        "type"
                    ]
                },
                "avroRecord": {
                    "title": "Record",
                    "description": "A Record",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "record"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "fields": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/avroField"
                            }
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "fields"
                    ]
                },
                "avroEnum": {
                    "title": "Enum",
                    "description": "An enumeration",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "enum"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "symbols": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "symbols"
                    ]
                },
                "avroArray": {
                    "title": "Array",
                    "description": "An array",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "array"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "items": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    },
                    "required": [
                        "type",
                        "items"
                    ]
                },
                "avroMap": {
                    "title": "Map",
                    "description": "A map of values",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "map"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "values": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/types"
                        }
                    },
                    "required": [
                        "type",
                        "values"
                    ]
                },
                "avroFixed": {
                    "title": "Fixed",
                    "description": "A fixed sized array of bytes",
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "const": "fixed"
                        },
                        "name": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/name"
                        },
                        "namespace": {
                            "$ref": "#/definitions/avroSchema_v1/definitions/namespace"
                        },
                        "doc": {
                            "type": "string"
                        },
                        "aliases": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/avroSchema_v1/definitions/name"
                            }
                        },
                        "size": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "type",
                        "name",
                        "size"
                    ]
                },
                "name": {
                    "type": "string",
                    "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
                },
                "namespace": {
                    "type": "string",
                    "pattern": "^([A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*)*$"
                }
            },
            "description": "Json-Schema definition for Avro AVSC files.",
            "oneOf": [
                {
                    "$ref": "#/definitions/avroSchema_v1/definitions/avroSchema"
                }
            ],
            "title": "Avro Schema Definition"
        },
        "multiFormatSchema": {
            "description": "The Multi Format Schema Object represents a schema definition. It differs from the Schema Object in that it supports multiple schema formats or languages (e.g., JSON Schema, Avro, etc.).",
            "type": "object",
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "schemaFormat": {
                    "description": "A string containing the name of the schema format that is used to define the information. If schemaFormat is missing, it MUST default to application/vnd.aai.asyncapi+json;version={{asyncapi}} where {{asyncapi}} matches the AsyncAPI Version String. In such a case, this would make the Multi Format Schema Object equivalent to the Schema Object. When using Reference Object within the schema, the schemaFormat of the resource being referenced MUST match the schemaFormat of the schema that contains the initial reference. For example, if you reference Avro schema, then schemaFormat of referencing resource and the resource being reference MUST match.",
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "description": "All the schema formats tooling MUST support",
                            "enum": [
                                "application/schema+json;version=draft-07",
                                "application/schema+yaml;version=draft-07",
                                "application/vnd.aai.asyncapi;version=3.0.0",
                                "application/vnd.aai.asyncapi+json;version=3.0.0",
                                "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                            ]
                        },
                        {
                            "description": "All the schema formats tools are RECOMMENDED to support",
                            "enum": [
                                "application/vnd.oai.openapi;version=3.0.0",
                                "application/vnd.oai.openapi+json;version=3.0.0",
                                "application/vnd.oai.openapi+yaml;version=3.0.0",
                                "application/vnd.apache.avro;version=1.9.0",
                                "application/vnd.apache.avro+json;version=1.9.0",
                                "application/vnd.apache.avro+yaml;version=1.9.0",
                                "application/raml+yaml;version=1.0"
                            ]
                        }
                    ]
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/default_message"
                },
                {
                    "$ref": "#/definitions/asyncapi_schema_message"
                },
                {
                    "$ref": "#/definitions/json_schema_draft_7_message"
                },
                {
                    "$ref": "#/definitions/openapi_message"
                },
                {
                    "$ref": "#/definitions/avro_message"
                }
            ],
            "definitions": {
                "default_message": {
                    "if": {
                        "not": {
                            "description": "If no schemaFormat has been defined, default to schema or reference",
                            "required": [
                                "schemaFormat"
                            ]
                        }
                    },
                    "then": {
                        "properties": {
                            "schema": {
                                "$ref": "#/definitions/schema"
                            }
                        }
                    }
                },
                "asyncapi_schema_message": {
                    "if": {
                        "description": "If schemaFormat has been defined check if it's one of the AsyncAPI Schema Object formats",
                        "required": [
                            "schemaFormat"
                        ],
                        "properties": {
                            "schemaFormat": {
                                "enum": [
                                    "application/vnd.aai.asyncapi;version=2.0.0",
                                    "application/vnd.aai.asyncapi+json;version=2.0.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.0.0",
                                    "application/vnd.aai.asyncapi;version=2.1.0",
                                    "application/vnd.aai.asyncapi+json;version=2.1.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.1.0",
                                    "application/vnd.aai.asyncapi;version=2.2.0",
                                    "application/vnd.aai.asyncapi+json;version=2.2.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.2.0",
                                    "application/vnd.aai.asyncapi;version=2.3.0",
                                    "application/vnd.aai.asyncapi+json;version=2.3.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.3.0",
                                    "application/vnd.aai.asyncapi;version=2.4.0",
                                    "application/vnd.aai.asyncapi+json;version=2.4.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.4.0",
                                    "application/vnd.aai.asyncapi;version=2.5.0",
                                    "application/vnd.aai.asyncapi+json;version=2.5.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.5.0",
                                    "application/vnd.aai.asyncapi;version=2.6.0",
                                    "application/vnd.aai.asyncapi+json;version=2.6.0",
                                    "application/vnd.aai.asyncapi+yaml;version=2.6.0",
                                    "application/vnd.aai.asyncapi;version=3.0.0",
                                    "application/vnd.aai.asyncapi+json;version=3.0.0",
                                    "application/vnd.aai.asyncapi+yaml;version=3.0.0"
                                ]
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "schema": {
                                "$ref": "#/definitions/schema"
                            }
                        }
                    }
                },
                "json_schema_draft_7_message": {
                    "if": {
                        "required": [
                            "schemaFormat"
                        ],
                        "properties": {
                            "schemaFormat": {
                                "enum": [
                                    "application/schema+json;version=draft-07",
                                    "application/schema+yaml;version=draft-07"
                                ]
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "schema": {
                                "$ref": "#/definitions/json-schema-draft-07-schema"
                            }
                        }
                    }
                },
                "openapi_message": {
                    "if": {
                        "required": [
                            "schemaFormat"
                        ],
                        "properties": {
                            "schemaFormat": {
                                "enum": [
                                    "application/vnd.oai.openapi;version=3.0.0",
                                    "application/vnd.oai.openapi+json;version=3.0.0",
                                    "application/vnd.oai.openapi+yaml;version=3.0.0"
                                ]
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/Reference"
                                    },
                                    {
                                        "$ref": "#/definitions/openapiSchema_3_0"
                                    }
                                ]
                            }
                        }
                    }
                },
                "avro_message": {
                    "if": {
                        "required": [
                            "schemaFormat"
                        ],
                        "properties": {
                            "schemaFormat": {
                                "enum": [
                                    "application/vnd.apache.avro;version=1.9.0",
                                    "application/vnd.apache.avro+json;version=1.9.0",
                                    "application/vnd.apache.avro+yaml;version=1.9.0"
                                ]
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/definitions/Reference"
                                    },
                                    {
                                        "$ref": "#/definitions/avroSchema_v1"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "anySchema": {
            "if": {
                "required": [
                    "schema"
                ]
            },
            "then": {
                "$ref": "#/definitions/multiFormatSchema"
            },
            "else": {
                "$ref": "#/definitions/schema"
            },
            "description": "An object representing either a schema or a multiFormatSchema based on the existence of the 'schema' property. If the property 'schema' is present, use the multi-format schema. Use the default AsyncAPI Schema otherwise."
        },
        "correlationId": {
            "type": "object",
            "description": "An object that specifies an identifier at design time that can used for message tracing and correlation.",
            "required": [
                "location"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A optional description of the correlation ID. GitHub Flavored Markdown is allowed."
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the correlation ID",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                }
            },
            "examples": [
                {
                    "description": "Default Correlation ID",
                    "location": "$message.header#/correlationId"
                }
            ]
        },
        "message": {
            "title": "Cloud Pub/Sub Channel Schema",
            "description": "This object contains information about the message representation for Google Cloud Pub/Sub.",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding."
                },
                "attributes": {
                    "type": "object"
                },
                "orderingKey": {
                    "type": "string"
                },
                "schema": {
                    "type": "object",
                    "additionalItems": false,
                    "properties": {
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "name"
                    ]
                }
            },
            "examples": [
                {
                    "schema": {
                        "name": "projects/your-project-id/schemas/your-avro-schema-id"
                    }
                },
                {
                    "schema": {
                        "name": "projects/your-project-id/schemas/your-protobuf-schema-id"
                    }
                }
            ]
        },
        "messageBindingsObject": {
            "type": "object",
            "description": "Map describing protocol-specific definitions for a message.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.3.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.3.0-message"
                            }
                        }
                    ]
                },
                "ws": {},
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-message"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-message"
                            }
                        }
                    ]
                },
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.5.0",
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.5.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-message"
                            }
                        }
                    ]
                },
                "anypointmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-message"
                            }
                        }
                    ]
                },
                "nats": {},
                "jms": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-message"
                            }
                        }
                    ]
                },
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-message"
                            }
                        }
                    ]
                },
                "solace": {},
                "googlepubsub": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-message"
                            }
                        }
                    ]
                }
            }
        },
        "messageTrait": {
            "type": "object",
            "description": "Describes a trait that MAY be applied to a Message Object. This object MAY contain any property from the Message Object, except payload and traits.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. application/json). When omitted, the value MUST be the one specified on the defaultContentType field."
                },
                "headers": {
                    "$ref": "#/definitions/anySchema"
                },
                "correlationId": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/correlationId"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the message."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the message."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the message. CommonMark is allowed."
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "description": "List of examples.",
                    "items": {
                        "type": "object"
                    }
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/messageBindingsObject"
                        }
                    ]
                }
            },
            "examples": [
                {
                    "contentType": "application/json"
                }
            ]
        },
        "messageObject": {
            "type": "object",
            "description": "Describes a message received on a given channel and operation.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "The content type to use when encoding/decoding a message's payload. The value MUST be a specific media type (e.g. application/json). When omitted, the value MUST be the one specified on the defaultContentType field."
                },
                "headers": {
                    "$ref": "#/definitions/anySchema"
                },
                "payload": {
                    "$ref": "#/definitions/anySchema"
                },
                "correlationId": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/correlationId"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the message."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the message."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the message. CommonMark is allowed."
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "description": "List of examples.",
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                            {
                                "required": [
                                    "payload"
                                ]
                            },
                            {
                                "required": [
                                    "headers"
                                ]
                            }
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Machine readable name of the message example."
                            },
                            "summary": {
                                "type": "string",
                                "description": "A brief summary of the message example."
                            },
                            "headers": {
                                "type": "object",
                                "description": "Example of the application headers. It can be of any type."
                            },
                            "payload": {
                                "description": "Example of the message payload. It can be of any type."
                            }
                        }
                    }
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/messageBindingsObject"
                        }
                    ]
                },
                "traits": {
                    "type": "array",
                    "description": "A list of traits to apply to the message object. Traits MUST be merged using traits merge mechanism. The resulting object MUST be a valid Message Object.",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/messageTrait"
                            },
                            {
                                "type": "array",
                                "items": [
                                    {
                                        "oneOf": [
                                            {
                                                "$ref": "#/definitions/Reference"
                                            },
                                            {
                                                "$ref": "#/definitions/messageTrait"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "object",
                                        "additionalItems": true
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "examples": [
                {
                    "messageId": "userSignup",
                    "name": "UserSignup",
                    "title": "User signup",
                    "summary": "Action to sign a user up.",
                    "description": "A longer description",
                    "contentType": "application/json",
                    "tags": [
                        {
                            "name": "user"
                        },
                        {
                            "name": "signup"
                        },
                        {
                            "name": "register"
                        }
                    ],
                    "headers": {
                        "type": "object",
                        "properties": {
                            "correlationId": {
                                "description": "Correlation ID set by application",
                                "type": "string"
                            },
                            "applicationInstanceId": {
                                "description": "Unique identifier for a given instance of the publishing application",
                                "type": "string"
                            }
                        }
                    },
                    "payload": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/userCreate"
                            },
                            "signup": {
                                "$ref": "#/components/schemas/signup"
                            }
                        }
                    },
                    "correlationId": {
                        "description": "Default Correlation ID",
                        "location": "$message.header#/correlationId"
                    },
                    "traits": [
                        {
                            "$ref": "#/components/messageTraits/commonHeaders"
                        }
                    ],
                    "examples": [
                        {
                            "name": "SimpleSignup",
                            "summary": "A simple UserSignup example message",
                            "headers": {
                                "correlationId": "my-correlation-id",
                                "applicationInstanceId": "myInstanceId"
                            },
                            "payload": {
                                "user": {
                                    "someUserKey": "someUserValue"
                                },
                                "signup": {
                                    "someSignupKey": "someSignupValue"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        "channelMessages": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/messageObject"
                    }
                ]
            },
            "description": "A map of the messages that will be sent to this channel by any application at any time. **Every message sent to this channel MUST be valid against one, and only one, of the message objects defined in this map.**"
        },
        "parameter": {
            "description": "Describes a parameter included in a channel address.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed."
                },
                "enum": {
                    "description": "An enumeration of string values to be used if the substitution options are from a limited set.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default": {
                    "description": "The default value to use for substitution, and to send, if an alternate value is not supplied.",
                    "type": "string"
                },
                "examples": {
                    "description": "An array of examples of the parameter value.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the parameter value",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                }
            },
            "examples": [
                {
                    "address": "user/{userId}/signedup",
                    "parameters": {
                        "userId": {
                            "description": "Id of the user.",
                            "location": "$message.payload#/user/id"
                        }
                    }
                }
            ]
        },
        "parameters": {
            "type": "object",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/parameter"
                    }
                ]
            },
            "description": "JSON objects describing re-usable channel parameters.",
            "examples": [
                {
                    "address": "user/{userId}/signedup",
                    "parameters": {
                        "userId": {
                            "description": "Id of the user."
                        }
                    }
                }
            ]
        },
        "channel": {
            "type": "object",
            "description": "Describes a shared communication channel.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "address": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "An optional string representation of this channel's address. The address is typically the \"topic name\", \"routing key\", \"event type\", or \"path\". When `null` or absent, it MUST be interpreted as unknown. This is useful when the address is generated dynamically at runtime or can't be known upfront. It MAY contain Channel Address Expressions."
                },
                "messages": {
                    "$ref": "#/definitions/channelMessages"
                },
                "parameters": {
                    "$ref": "#/definitions/parameters"
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the channel."
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the channel."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the channel. CommonMark is allowed."
                },
                "servers": {
                    "type": "array",
                    "description": "The references of the servers on which this channel is available. If absent or empty then this channel must be available on all servers.",
                    "items": {
                        "$ref": "#/definitions/Reference"
                    },
                    "uniqueItems": true
                },
                "tags": {
                    "type": "array",
                    "description": "A list of tags for logical grouping of channels.",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/Reference"
                            },
                            {
                                "$ref": "#/definitions/tag"
                            }
                        ]
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/externalDocs"
                        }
                    ]
                },
                "bindings": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/channelBindingsObject"
                        }
                    ]
                }
            },
            "examples": [
                {
                    "address": "users.{userId}",
                    "title": "Users channel",
                    "description": "This channel is used to exchange messages about user events.",
                    "messages": {
                        "userSignedUp": {
                            "$ref": "#/components/messages/userSignedUp"
                        },
                        "userCompletedOrder": {
                            "$ref": "#/components/messages/userCompletedOrder"
                        }
                    },
                    "parameters": {
                        "userId": {
                            "$ref": "#/components/parameters/userId"
                        }
                    },
                    "servers": [
                        {
                            "$ref": "#/servers/rabbitmqInProd"
                        },
                        {
                            "$ref": "#/servers/rabbitmqInStaging"
                        }
                    ],
                    "bindings": {
                        "amqp": {
                            "is": "queue",
                            "queue": {
                                "exclusive": true
                            }
                        }
                    },
                    "tags": [
                        {
                            "name": "user",
                            "description": "User-related messages"
                        }
                    ],
                    "externalDocs": {
                        "description": "Find more info here",
                        "url": "https://example.com"
                    }
                }
            ]
        },
        "channelBindingsObject": {
            "type": "object",
            "description": "Map describing protocol-specific definitions for a channel.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {},
                "ws": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-websockets-0.1.0-channel"
                            }
                        }
                    ]
                },
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-channel"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {},
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.5.0",
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.5.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-channel"
                            }
                        }
                    ]
                },
                "anypointmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-anypointmq-0.0.1-channel"
                            }
                        }
                    ]
                },
                "nats": {},
                "jms": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.0.1"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.0.1"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-jms-0.0.1-channel"
                            }
                        }
                    ]
                },
                "sns": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sns-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sns-0.1.0-channel"
                            }
                        }
                    ]
                },
                "sqs": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sqs-0.2.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sqs-0.2.0-channel"
                            }
                        }
                    ]
                },
                "stomp": {},
                "redis": {},
                "ibmmq": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-ibmmq-0.1.0-channel"
                            }
                        }
                    ]
                },
                "solace": {},
                "googlepubsub": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-googlepubsub-0.2.0-channel"
                            }
                        }
                    ]
                },
                "pulsar": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-pulsar-0.1.0-channel"
                            }
                        }
                    ]
                }
            }
        },
        "channels": {
            "type": "object",
            "description": "An object containing all the Channel Object definitions the Application MUST use during runtime.",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/channel"
                    }
                ]
            },
            "examples": [
                {
                    "userSignedUp": {
                        "address": "user.signedup",
                        "messages": {
                            "userSignedUp": {
                                "$ref": "#/components/messages/userSignedUp"
                            }
                        }
                    }
                }
            ]
        },
        "operationReplyAddress": {
            "type": "object",
            "description": "An object that specifies where an operation has to send the reply",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "required": [
                "location"
            ],
            "properties": {
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the reply address.",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the address. CommonMark is allowed."
                }
            },
            "examples": [
                {
                    "description": "Consumer inbox",
                    "location": "$message.header#/replyTo"
                }
            ]
        },
        "operationReply": {
            "type": "object",
            "description": "Describes the reply part that MAY be applied to an Operation Object. If an operation implements the request/reply pattern, the reply object represents the response message.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "address": {
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationReplyAddress"
                        }
                    ]
                },
                "channel": {
                    "$ref": "#/definitions/Reference"
                },
                "messages": {
                    "type": "array",
                    "description": "A list of $ref pointers pointing to the supported Message Objects that can be processed by this operation as reply. It MUST contain a subset of the messages defined in the channel referenced in this operation reply. Every message processed by this operation MUST be valid against one, and only one, of the message objects referenced in this list. Please note the messages property value MUST be a list of Reference Objects and, therefore, MUST NOT contain Message Objects. However, it is RECOMMENDED that parsers (or other software) dereference this property for a better development experience.",
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }
                }
            }
        },
        "operation": {
            "title": "Solace operation bindings object",
            "description": "This object contains information about the operation representation in Solace.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "destinations": {
                    "description": "The list of Solace destinations referenced in the operation.",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "deliveryMode": {
                                "type": "string",
                                "enum": [
                                    "direct",
                                    "persistent"
                                ]
                            }
                        },
                        "oneOf": [
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "queue",
                                        "description": "If the type is queue, then the subscriber can bind to the queue. The queue subscribes to the given topicSubscriptions. If no topicSubscriptions are provied, the queue will subscribe to the topic as represented by the channel name."
                                    },
                                    "queue": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "The name of the queue"
                                            },
                                            "topicSubscriptions": {
                                                "type": "array",
                                                "description": "The list of topics that the queue subscribes to.",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "accessType": {
                                                "type": "string",
                                                "enum": [
                                                    "exclusive",
                                                    "nonexclusive"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "properties": {
                                    "destinationType": {
                                        "type": "string",
                                        "const": "topic",
                                        "description": "If the type is topic, then the subscriber subscribes to the given topicSubscriptions. If no topicSubscriptions are provided, the client will subscribe to the topic as represented by the channel name."
                                    },
                                    "topicSubscriptions": {
                                        "type": "array",
                                        "description": "The list of topics that the client subscribes to.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "bindingVersion": {
                    "type": "string",
                    "enum": [
                        "0.2.0"
                    ],
                    "description": "The version of this binding. If omitted, \"latest\" MUST be assumed."
                }
            },
            "examples": [
                {
                    "bindingVersion": "0.2.0",
                    "destinations": [
                        {
                            "destinationType": "queue",
                            "queue": {
                                "name": "sampleQueue",
                                "topicSubscriptions": [
                                    "samples/*"
                                ],
                                "accessType": "nonexclusive"
                            }
                        },
                        {
                            "destinationType": "topic",
                            "topicSubscriptions": [
                                "samples/*"
                            ]
                        }
                    ]
                }
            ]
        },
        "operationBindingsObject": {
            "type": "object",
            "description": "Map describing protocol-specific definitions for an operation.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "http": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.2.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-http-0.3.0-operation"
                            }
                        }
                    ]
                },
                "ws": {},
                "amqp": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-amqp-0.3.0-operation"
                            }
                        }
                    ]
                },
                "amqp1": {},
                "mqtt": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-mqtt-0.2.0-operation"
                            }
                        }
                    ]
                },
                "kafka": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.5.0",
                                "0.4.0",
                                "0.3.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.5.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.5.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.4.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-kafka-0.3.0-operation"
                            }
                        }
                    ]
                },
                "anypointmq": {},
                "nats": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-nats-0.1.0-operation"
                            }
                        }
                    ]
                },
                "jms": {},
                "sns": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.1.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sns-0.1.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.1.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sns-0.1.0-operation"
                            }
                        }
                    ]
                },
                "sqs": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sqs-0.2.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-sqs-0.2.0-operation"
                            }
                        }
                    ]
                },
                "stomp": {},
                "redis": {},
                "ibmmq": {},
                "solace": {
                    "properties": {
                        "bindingVersion": {
                            "enum": [
                                "0.4.0",
                                "0.3.0",
                                "0.2.0"
                            ]
                        }
                    },
                    "allOf": [
                        {
                            "description": "If no bindingVersion specified, use the latest binding",
                            "if": {
                                "not": {
                                    "required": [
                                        "bindingVersion"
                                    ]
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.4.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.4.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.4.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.3.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.3.0-operation"
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "bindingVersion"
                                ],
                                "properties": {
                                    "bindingVersion": {
                                        "const": "0.2.0"
                                    }
                                }
                            },
                            "then": {
                                "$ref": "#/definitions/bindings-solace-0.2.0-operation"
                            }
                        }
                    ]
                },
                "googlepubsub": {}
            }
        },
        "operationTrait": {
            "type": "object",
            "description": "Describes a trait that MAY be applied to an Operation Object. This object MAY contain any property from the Operation Object, except the action, channel and traits ones.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "title": {
                    "$ref": "#/definitions/operation/properties/title"
                },
                "summary": {
                    "$ref": "#/definitions/operation/properties/summary"
                },
                "description": {
                    "$ref": "#/definitions/operation/properties/description"
                },
                "security": {
                    "$ref": "#/definitions/operation/properties/security"
                },
                "tags": {
                    "$ref": "#/definitions/operation/properties/tags"
                },
                "externalDocs": {
                    "$ref": "#/definitions/operation/properties/externalDocs"
                },
                "bindings": {
                    "description": "A map where the keys describe the name of the protocol and the values describe protocol-specific definitions for the operation.",
                    "oneOf": [
                        {
                            "$ref": "#/definitions/Reference"
                        },
                        {
                            "$ref": "#/definitions/operationBindingsObject"
                        }
                    ]
                }
            },
            "examples": [
                {
                    "bindings": {
                        "amqp": {
                            "ack": false
                        }
                    }
                }
            ]
        },
        "operations": {
            "type": "object",
            "description": "Holds a dictionary with all the operations this application MUST implement.",
            "additionalProperties": {
                "oneOf": [
                    {
                        "$ref": "#/definitions/Reference"
                    },
                    {
                        "$ref": "#/definitions/operation"
                    }
                ]
            },
            "examples": [
                {
                    "onUserSignUp": {
                        "title": "User sign up",
                        "summary": "Action to sign a user up.",
                        "description": "A longer description",
                        "channel": {
                            "$ref": "#/channels/userSignup"
                        },
                        "action": "send",
                        "tags": [
                            {
                                "name": "user"
                            },
                            {
                                "name": "signup"
                            },
                            {
                                "name": "register"
                            }
                        ],
                        "bindings": {
                            "amqp": {
                                "ack": false
                            }
                        },
                        "traits": [
                            {
                                "$ref": "#/components/operationTraits/kafka"
                            }
                        ]
                    }
                }
            ]
        },
        "components": {
            "type": "object",
            "description": "An object to hold a set of reusable objects for different aspects of the AsyncAPI specification. All objects defined within the components object will have no effect on the API unless they are explicitly referenced from properties outside the components object.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d\\.\\x2d_]+$": {
                    "$ref": "#/definitions/specificationExtension"
                }
            },
            "properties": {
                "schemas": {
                    "type": "object",
                    "description": "An object to hold reusable Schema Object. If this is a Schema Object, then the schemaFormat will be assumed to be 'application/vnd.aai.asyncapi+json;version=asyncapi' where the version is equal to the AsyncAPI Version String.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "$ref": "#/definitions/anySchema"
                        }
                    }
                },
                "servers": {
                    "type": "object",
                    "description": "An object to hold reusable Server Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/server"
                                }
                            ]
                        }
                    }
                },
                "channels": {
                    "type": "object",
                    "description": "An object to hold reusable Channel Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/channel"
                                }
                            ]
                        }
                    }
                },
                "serverVariables": {
                    "type": "object",
                    "description": "An object to hold reusable Server Variable Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/serverVariable"
                                }
                            ]
                        }
                    }
                },
                "operations": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operation"
                                }
                            ]
                        }
                    }
                },
                "messages": {
                    "type": "object",
                    "description": "An object to hold reusable Message Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageObject"
                                }
                            ]
                        }
                    }
                },
                "securitySchemes": {
                    "type": "object",
                    "description": "An object to hold reusable Security Scheme Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/SecurityScheme"
                                }
                            ]
                        }
                    }
                },
                "parameters": {
                    "type": "object",
                    "description": "An object to hold reusable Parameter Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/parameter"
                                }
                            ]
                        }
                    }
                },
                "correlationIds": {
                    "type": "object",
                    "description": "An object to hold reusable Correlation ID Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/correlationId"
                                }
                            ]
                        }
                    }
                },
                "operationTraits": {
                    "type": "object",
                    "description": "An object to hold reusable Operation Trait Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationTrait"
                                }
                            ]
                        }
                    }
                },
                "messageTraits": {
                    "type": "object",
                    "description": "An object to hold reusable Message Trait Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageTrait"
                                }
                            ]
                        }
                    }
                },
                "replies": {
                    "type": "object",
                    "description": "An object to hold reusable Operation Reply Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationReply"
                                }
                            ]
                        }
                    }
                },
                "replyAddresses": {
                    "type": "object",
                    "description": "An object to hold reusable Operation Reply Address Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationReplyAddress"
                                }
                            ]
                        }
                    }
                },
                "serverBindings": {
                    "type": "object",
                    "description": "An object to hold reusable Server Bindings Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/serverBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "channelBindings": {
                    "type": "object",
                    "description": "An object to hold reusable Channel Bindings Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/channelBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "operationBindings": {
                    "type": "object",
                    "description": "An object to hold reusable Operation Bindings Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/operationBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "messageBindings": {
                    "type": "object",
                    "description": "An object to hold reusable Message Bindings Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/messageBindingsObject"
                                }
                            ]
                        }
                    }
                },
                "tags": {
                    "type": "object",
                    "description": "An object to hold reusable Tag Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/tag"
                                }
                            ]
                        }
                    }
                },
                "externalDocs": {
                    "type": "object",
                    "description": "An object to hold reusable External Documentation Objects.",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/Reference"
                                },
                                {
                                    "$ref": "#/definitions/externalDocs"
                                }
                            ]
                        }
                    }
                }
            },
            "examples": [
                {
                    "components": {
                        "schemas": {
                            "Category": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "Tag": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int64"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            },
                            "AvroExample": {
                                "schemaFormat": "application/vnd.apache.avro+json;version=1.9.0",
                                "schema": {
                                    "$ref": "path/to/user-create.avsc#/UserCreate"
                                }
                            }
                        },
                        "servers": {
                            "development": {
                                "host": "{stage}.in.mycompany.com:{port}",
                                "description": "RabbitMQ broker",
                                "protocol": "amqp",
                                "protocolVersion": "0-9-1",
                                "variables": {
                                    "stage": {
                                        "$ref": "#/components/serverVariables/stage"
                                    },
                                    "port": {
                                        "$ref": "#/components/serverVariables/port"
                                    }
                                }
                            }
                        },
                        "serverVariables": {
                            "stage": {
                                "default": "demo",
                                "description": "This value is assigned by the service provider, in this example `mycompany.com`"
                            },
                            "port": {
                                "enum": [
                                    "5671",
                                    "5672"
                                ],
                                "default": "5672"
                            }
                        },
                        "channels": {
                            "user/signedup": {
                                "subscribe": {
                                    "message": {
                                        "$ref": "#/components/messages/userSignUp"
                                    }
                                }
                            }
                        },
                        "messages": {
                            "userSignUp": {
                                "summary": "Action to sign a user up.",
                                "description": "Multiline description of what this action does.\nHere you have another line.\n",
                                "tags": [
                                    {
                                        "name": "user"
                                    },
                                    {
                                        "name": "signup"
                                    }
                                ],
                                "headers": {
                                    "type": "object",
                                    "properties": {
                                        "applicationInstanceId": {
                                            "description": "Unique identifier for a given instance of the publishing application",
                                            "type": "string"
                                        }
                                    }
                                },
                                "payload": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/userCreate"
                                        },
                                        "signup": {
                                            "$ref": "#/components/schemas/signup"
                                        }
                                    }
                                }
                            }
                        },
                        "parameters": {
                            "userId": {
                                "description": "Id of the user."
                            }
                        },
                        "correlationIds": {
                            "default": {
                                "description": "Default Correlation ID",
                                "location": "$message.header#/correlationId"
                            }
                        },
                        "messageTraits": {
                            "commonHeaders": {
                                "headers": {
                                    "type": "object",
                                    "properties": {
                                        "my-app-header": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 100
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    },
    "description": "!!Auto generated!! \n Do not manually edit. "
}