{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "AsyncAPI 2.2.0 schema.",
    "type": "object",
    "required": [
        "asyncapi",
        "info",
        "channels"
    ],
    "additionalProperties": false,
    "patternProperties": {
        "^x-[\\w\\d.\\-_]+$": {
            "$ref": "specificationExtension.json"
        }
    },
    "properties": {
        "asyncapi": {
            "type": "string",
            "enum": [
                "2.2.0"
            ],
            "description": "The AsyncAPI specification version of this document."
        },
        "id": {
            "type": "string",
            "description": "A unique id representing the application.",
            "format": "uri"
        },
        "info": {
            "$ref": "info.json"
        },
        "servers": {
            "type": "object",
            "additionalProperties": {
                "$ref": "./server.json"
            }
        },
        "defaultContentType": {
            "type": "string"
        },
        "channels": {
            "$ref": "channels.json"
        },
        "components": {
            "$ref": "components.json"
        },
        "tags": {
            "type": "array",
            "items": {
                "$ref": "tag.json"
            },
            "uniqueItems": true
        },
        "externalDocs": {
            "$ref": "externalDocs.json"
        }
    },
    "definitions": {
        "specificationExtension.json": {
            "$id": "specificationExtension.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "description": "Any property starting with x- is valid.",
            "additionalProperties": true,
            "additionalItems": true
        },
        "info.json": {
            "$id": "info.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "General information about the API.",
            "required": [
                "version",
                "title"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "title": {
                    "type": "string",
                    "description": "A unique and precise title of the API."
                },
                "version": {
                    "type": "string",
                    "description": "A semantic version number of the API."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the API. Should be different from the title. CommonMark is allowed."
                },
                "termsOfService": {
                    "type": "string",
                    "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
                    "format": "uri"
                },
                "contact": {
                    "$ref": "contact.json"
                },
                "license": {
                    "$ref": "license.json"
                }
            }
        },
        "contact.json": {
            "$id": "contact.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "Contact information for the owners of the API.",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The identifying name of the contact person/organization."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the contact information.",
                    "format": "uri"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the contact person/organization.",
                    "format": "email"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            }
        },
        "license.json": {
            "$id": "license.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "name"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the license type. It's encouraged to use an OSI compatible license."
                },
                "url": {
                    "type": "string",
                    "description": "The URL pointing to the license.",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            }
        },
        "server.json": {
            "$id": "server.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "An object representing a Server.",
            "required": [
                "url",
                "protocol"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string",
                    "description": "The transfer protocol."
                },
                "protocolVersion": {
                    "type": "string"
                },
                "variables": {
                    "$ref": "serverVariables.json"
                },
                "security": {
                    "type": "array",
                    "items": {
                        "$ref": "SecurityRequirement.json"
                    }
                },
                "bindings": {
                    "$ref": "bindingsObject.json"
                }
            }
        },
        "channels.json": {
            "$id": "channels.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "propertyNames": {
                "type": "string",
                "format": "uri-template",
                "minLength": 1
            },
            "additionalProperties": {
                "$ref": "channelItem.json"
            }
        },
        "channelItem.json": {
            "$id": "channelItem.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "$ref": {
                    "$ref": "ReferenceObject.json"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "parameter.json"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A description of the channel."
                },
                "servers": {
                    "type": "array",
                    "description": "The names of the servers on which this channel is available. If absent or empty then this channel must be available on all servers.",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "publish": {
                    "$ref": "operation.json"
                },
                "subscribe": {
                    "$ref": "operation.json"
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "bindings": {
                    "$ref": "bindingsObject.json"
                }
            }
        },
        "components.json": {
            "$id": "components.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "description": "An object to hold a set of reusable objects for different aspects of the AsyncAPI Specification.",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "schemas": {
                    "$ref": "schemas.json"
                },
                "messages": {
                    "$ref": "messages.json"
                },
                "securitySchemes": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "Reference.json"
                                },
                                {
                                    "$ref": "SecurityScheme.json"
                                }
                            ]
                        }
                    }
                },
                "parameters": {
                    "$ref": "parameters.json"
                },
                "correlationIds": {
                    "type": "object",
                    "patternProperties": {
                        "^[\\w\\d\\.\\-_]+$": {
                            "oneOf": [
                                {
                                    "$ref": "Reference.json"
                                },
                                {
                                    "$ref": "correlationId.json"
                                }
                            ]
                        }
                    }
                },
                "operationTraits": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "operationTrait.json"
                    }
                },
                "messageTraits": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "messageTrait.json"
                    }
                },
                "serverBindings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "bindingsObject.json"
                    }
                },
                "channelBindings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "bindingsObject.json"
                    }
                },
                "operationBindings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "bindingsObject.json"
                    }
                },
                "messageBindings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "bindingsObject.json"
                    }
                }
            }
        },
        "schemas.json": {
            "$id": "schemas.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": {
                "$ref": "schema.json"
            },
            "description": "JSON objects describing schemas the API uses."
        },
        "schema.json": {
            "$id": "schema.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "allOf": [
                {
                    "$ref": "http://json-schema.org/draft-07/schema#"
                },
                {
                    "patternProperties": {
                        "^x-[\\w\\d.\\-_]+$": {
                            "$ref": "specificationExtension.json"
                        }
                    },
                    "properties": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "$ref": "schema.json"
                                },
                                {
                                    "type": "boolean"
                                }
                            ],
                            "default": {}
                        },
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "schema.json"
                                },
                                {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "$ref": "schema.json"
                                    }
                                }
                            ],
                            "default": {}
                        },
                        "allOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "schema.json"
                            }
                        },
                        "oneOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "schema.json"
                            }
                        },
                        "anyOf": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "schema.json"
                            }
                        },
                        "not": {
                            "$ref": "schema.json"
                        },
                        "properties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "schema.json"
                            },
                            "default": {}
                        },
                        "patternProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "schema.json"
                            },
                            "default": {}
                        },
                        "propertyNames": {
                            "$ref": "schema.json"
                        },
                        "contains": {
                            "$ref": "schema.json"
                        },
                        "discriminator": {
                            "type": "string"
                        },
                        "externalDocs": {
                            "$ref": "externalDocs.json"
                        },
                        "deprecated": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                }
            ]
        },
        "messages.json": {
            "$id": "messages.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": {
                "$ref": "message.json"
            },
            "description": "JSON objects describing the messages being consumed and produced by the API."
        },
        "message.json": {
            "$id": "message.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "oneOf": [
                {
                    "$ref": "Reference.json"
                },
                {
                    "oneOf": [
                        {
                            "type": "object",
                            "required": [
                                "oneOf"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "oneOf": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "message.json"
                                    }
                                }
                            }
                        },
                        {
                            "type": "object",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^x-[\\w\\d.\\-_]+$": {
                                    "$ref": "specificationExtension.json"
                                }
                            },
                            "properties": {
                                "schemaFormat": {
                                    "type": "string"
                                },
                                "contentType": {
                                    "type": "string"
                                },
                                "headers": {
                                    "allOf": [
                                        {
                                            "$ref": "schema.json"
                                        },
                                        {
                                            "properties": {
                                                "type": {
                                                    "const": "object"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "payload": {},
                                "correlationId": {
                                    "oneOf": [
                                        {
                                            "$ref": "Reference.json"
                                        },
                                        {
                                            "$ref": "correlationId.json"
                                        }
                                    ]
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "tag.json"
                                    },
                                    "uniqueItems": true
                                },
                                "summary": {
                                    "type": "string",
                                    "description": "A brief summary of the message."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the message."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A human-friendly title for the message."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A longer description of the message. CommonMark is allowed."
                                },
                                "externalDocs": {
                                    "$ref": "externalDocs.json"
                                },
                                "deprecated": {
                                    "type": "boolean",
                                    "default": false
                                },
                                "examples": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "anyOf": [
                                            {
                                                "required": [
                                                    "payload"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "headers"
                                                ]
                                            }
                                        ],
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Machine readable name of the message example."
                                            },
                                            "summary": {
                                                "type": "string",
                                                "description": "A brief summary of the message example."
                                            },
                                            "headers": {
                                                "type": "object"
                                            },
                                            "payload": {}
                                        }
                                    }
                                },
                                "bindings": {
                                    "$ref": "bindingsObject.json"
                                },
                                "traits": {
                                    "type": "array",
                                    "items": {
                                        "oneOf": [
                                            {
                                                "$ref": "Reference.json"
                                            },
                                            {
                                                "$ref": "messageTrait.json"
                                            },
                                            {
                                                "type": "array",
                                                "items": [
                                                    {
                                                        "oneOf": [
                                                            {
                                                                "$ref": "Reference.json"
                                                            },
                                                            {
                                                                "$ref": "messageTrait.json"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "type": "object",
                                                        "additionalItems": true
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            ]
        },
        "Reference.json": {
            "$id": "Reference.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "$ref"
            ],
            "properties": {
                "$ref": {
                    "$ref": "ReferenceObject.json"
                }
            }
        },
        "ReferenceObject.json": {
            "$id": "ReferenceObject.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "string",
            "format": "uri-reference"
        },
        "SecurityScheme.json": {
            "$id": "SecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "oneOf": [
                {
                    "$ref": "userPassword.json"
                },
                {
                    "$ref": "apiKey.json"
                },
                {
                    "$ref": "X509.json"
                },
                {
                    "$ref": "symmetricEncryption.json"
                },
                {
                    "$ref": "asymmetricEncryption.json"
                },
                {
                    "$ref": "HTTPSecurityScheme.json"
                },
                {
                    "$ref": "oauth2Flows.json"
                },
                {
                    "$ref": "openIdConnect.json"
                },
                {
                    "$ref": "SaslSecurityScheme.json"
                }
            ]
        },
        "userPassword.json": {
            "$id": "userPassword.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "userPassword"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "apiKey.json": {
            "$id": "apiKey.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "apiKey"
                    ]
                },
                "in": {
                    "type": "string",
                    "enum": [
                        "user",
                        "password"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "X509.json": {
            "$id": "X509.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "X509"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "symmetricEncryption.json": {
            "$id": "symmetricEncryption.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "symmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "asymmetricEncryption.json": {
            "$id": "asymmetricEncryption.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "asymmetricEncryption"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "HTTPSecurityScheme.json": {
            "$id": "HTTPSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "oneOf": [
                {
                    "$ref": "NonBearerHTTPSecurityScheme.json"
                },
                {
                    "$ref": "BearerHTTPSecurityScheme.json"
                },
                {
                    "$ref": "APIKeyHTTPSecurityScheme.json"
                }
            ]
        },
        "NonBearerHTTPSecurityScheme.json": {
            "$id": "NonBearerHTTPSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "not": {
                "type": "object",
                "properties": {
                    "scheme": {
                        "type": "string",
                        "enum": [
                            "bearer"
                        ]
                    }
                }
            },
            "type": "object",
            "required": [
                "scheme",
                "type"
            ],
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http"
                    ]
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "BearerHTTPSecurityScheme.json": {
            "$id": "BearerHTTPSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type",
                "scheme"
            ],
            "properties": {
                "scheme": {
                    "type": "string",
                    "enum": [
                        "bearer"
                    ]
                },
                "bearerFormat": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "http"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "APIKeyHTTPSecurityScheme.json": {
            "$id": "APIKeyHTTPSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type",
                "name",
                "in"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "httpApiKey"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "in": {
                    "type": "string",
                    "enum": [
                        "header",
                        "query",
                        "cookie"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "oauth2Flows.json": {
            "$id": "oauth2Flows.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type",
                "flows"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "oauth2"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "flows": {
                    "type": "object",
                    "properties": {
                        "implicit": {
                            "allOf": [
                                {
                                    "$ref": "oauth2Flow.json"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "scopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "tokenUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "password": {
                            "allOf": [
                                {
                                    "$ref": "oauth2Flow.json"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "scopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "clientCredentials": {
                            "allOf": [
                                {
                                    "$ref": "oauth2Flow.json"
                                },
                                {
                                    "required": [
                                        "tokenUrl",
                                        "scopes"
                                    ]
                                },
                                {
                                    "not": {
                                        "required": [
                                            "authorizationUrl"
                                        ]
                                    }
                                }
                            ]
                        },
                        "authorizationCode": {
                            "allOf": [
                                {
                                    "$ref": "oauth2Flow.json"
                                },
                                {
                                    "required": [
                                        "authorizationUrl",
                                        "tokenUrl",
                                        "scopes"
                                    ]
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            }
        },
        "oauth2Flow.json": {
            "$id": "oauth2Flow.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "tokenUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "refreshUrl": {
                    "type": "string",
                    "format": "uri"
                },
                "scopes": {
                    "$ref": "oauth2Scopes.json"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "oauth2Scopes.json": {
            "$id": "oauth2Scopes.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "openIdConnect.json": {
            "$id": "openIdConnect.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type",
                "openIdConnectUrl"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "openIdConnect"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "openIdConnectUrl": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "SaslSecurityScheme.json": {
            "$id": "SaslSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "oneOf": [
                {
                    "$ref": "SaslPlainSecurityScheme.json"
                },
                {
                    "$ref": "SaslScramSecurityScheme.json"
                },
                {
                    "$ref": "SaslGssapiSecurityScheme.json"
                }
            ]
        },
        "SaslPlainSecurityScheme.json": {
            "$id": "SaslPlainSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "plain"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "SaslScramSecurityScheme.json": {
            "$id": "SaslScramSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "scramSha256",
                        "scramSha512"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "SaslGssapiSecurityScheme.json": {
            "$id": "SaslGssapiSecurityScheme.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "gssapi"
                    ]
                },
                "description": {
                    "type": "string"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "additionalProperties": false
        },
        "parameters.json": {
            "$id": "parameters.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": {
                "$ref": "parameter.json"
            },
            "description": "JSON objects describing re-usable channel parameters."
        },
        "parameter.json": {
            "$id": "parameter.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A brief description of the parameter. This could contain examples of use. GitHub Flavored Markdown is allowed."
                },
                "schema": {
                    "$ref": "schema.json"
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the parameter value",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                },
                "$ref": {
                    "$ref": "ReferenceObject.json"
                }
            }
        },
        "correlationId.json": {
            "$id": "correlationId.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "required": [
                "location"
            ],
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A optional description of the correlation ID. GitHub Flavored Markdown is allowed."
                },
                "location": {
                    "type": "string",
                    "description": "A runtime expression that specifies the location of the correlation ID",
                    "pattern": "^\\$message\\.(header|payload)#(\\/(([^\\/~])|(~[01]))*)*"
                }
            }
        },
        "operationTrait.json": {
            "$id": "operationTrait.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "summary": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "tag.json"
                    },
                    "uniqueItems": true
                },
                "externalDocs": {
                    "$ref": "externalDocs.json"
                },
                "operationId": {
                    "type": "string"
                },
                "bindings": {
                    "$ref": "bindingsObject.json"
                }
            }
        },
        "messageTrait.json": {
            "$id": "messageTrait.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            },
            "properties": {
                "schemaFormat": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "headers": {
                    "oneOf": [
                        {
                            "$ref": "Reference.json"
                        },
                        {
                            "$ref": "schema.json"
                        }
                    ]
                },
                "correlationId": {
                    "oneOf": [
                        {
                            "$ref": "Reference.json"
                        },
                        {
                            "$ref": "correlationId.json"
                        }
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "tag.json"
                    },
                    "uniqueItems": true
                },
                "summary": {
                    "type": "string",
                    "description": "A brief summary of the message."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the message."
                },
                "title": {
                    "type": "string",
                    "description": "A human-friendly title for the message."
                },
                "description": {
                    "type": "string",
                    "description": "A longer description of the message. CommonMark is allowed."
                },
                "externalDocs": {
                    "$ref": "externalDocs.json"
                },
                "deprecated": {
                    "type": "boolean",
                    "default": false
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "bindings": {
                    "$ref": "bindingsObject.json"
                }
            }
        },
        "bindingsObject.json": {
            "$id": "bindingsObject.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "http": {},
                "ws": {},
                "amqp": {},
                "amqp1": {},
                "mqtt": {},
                "mqtt5": {},
                "kafka": {},
                "anypointmq": {},
                "nats": {},
                "jms": {},
                "sns": {},
                "sqs": {},
                "stomp": {},
                "redis": {},
                "ibmmq": {}
            }
        },
        "tag.json": {
            "$id": "tag.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "externalDocs": {
                    "$ref": "externalDocs.json"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            }
        },
        "externalDocs.json": {
            "$id": "externalDocs.json",
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "additionalProperties": false,
            "description": "information about external documentation",
            "required": [
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                }
            },
            "patternProperties": {
                "^x-[\\w\\d.\\-_]+$": {
                    "$ref": "specificationExtension.json"
                }
            }
        }
    }
}