{
  "description": "The Multi Format Schema Object represents a schema definition. It differs from the Schema Object in that it supports multiple schema formats or languages (e.g., JSON Schema, Avro, etc.).",
  "type": "object",
  "patternProperties": {
    "^x-[\\w\\d\\.\\x2d_]+$": {
      "$ref": "http://asyncapi.com/definitions/3.0.0/specificationExtension.json"
    }
  },
  "properties": {
    "schemaFormat": {
      "description": "A string containing the name of the schema format that is used to define the information. If schemaFormat is missing, it MUST default to application/vnd.aai.asyncapi+json;version={{asyncapi}} where {{asyncapi}} matches the AsyncAPI Version String. In such a case, this would make the Multi Format Schema Object equivalent to the Schema Object. When using Reference Object within the schema, the schemaFormat of the resource being referenced MUST match the schemaFormat of the schema that contains the initial reference. For example, if you reference Avro schema, then schemaFormat of referencing resource and the resource being reference MUST match.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "description": "All the schema formats tooling MUST support",
          "enum": [
            "application/schema+json;version=draft-07",
            "application/schema+yaml;version=draft-07",

            "application/vnd.aai.asyncapi;version=3.0.0",
            "application/vnd.aai.asyncapi+json;version=3.0.0",
            "application/vnd.aai.asyncapi+yaml;version=3.0.0"
          ]
        },
        {
          "description": "All the schema formats tools are RECOMMENDED to support",
          "enum": [
            "application/vnd.oai.openapi;version=3.0.0",
            "application/vnd.oai.openapi+json;version=3.0.0",
            "application/vnd.oai.openapi+yaml;version=3.0.0",

            "application/vnd.apache.avro;version=1.9.0",
            "application/vnd.apache.avro+json;version=1.9.0",
            "application/vnd.apache.avro+yaml;version=1.9.0",

            "application/raml+yaml;version=1.0"
          ]
        }
      ]
    }
  },
  "anyOf": [
    {
      "if": {
        "not": {
          "description": "If no schemaFormat has been defined, default to schema or reference",
          "required": [
            "schemaFormat"
          ]
        }
      },
      "then": {
        "properties": {
          "schema": {
            "$ref": "http://asyncapi.com/definitions/3.0.0/schema.json"
          }
        }
      }
    },
    {
      "$ref": "http://asyncapi.com/definitions/3.0.0/multiFormatAsyncAPISchemaMessage.json"
    },
    {
      "$ref": "http://asyncapi.com/definitions/3.0.0/multiFormatOpenAPIMessage.json"
    },
    {
      "$ref": "http://asyncapi.com/definitions/3.0.0/multiFormatJsonSchemaMessage.json"
    },
    {
      "$ref": "http://asyncapi.com/definitions/3.0.0/multiFormatAvroMessage.json"
    }
  ],
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://asyncapi.com/definitions/3.0.0/multiFormatSchema.json"
}